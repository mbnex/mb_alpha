{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AliExpress",
  "description": "JSON Schema for AliExpress data structures",
  "type": "object",
  "properties": {
    "products": {
      "type": "array",
      "description": "List of products available on AliExpress",
      "items": {
        "$ref": "#/definitions/product"
      }
    },
    "categories": {
      "type": "array",
      "description": "List of product categories on AliExpress",
      "items": {
        "$ref": "#/definitions/category"
      }
    },
    "sellers": {
      "type": "array",
      "description": "List of sellers on AliExpress",
      "items": {
        "$ref": "#/definitions/seller"
      }
    },
    "orders": {
      "type": "array",
      "description": "List of user orders",
      "items": {
        "$ref": "#/definitions/order"
      }
    },
    "users": {
      "type": "array",
      "description": "List of AliExpress users",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "promotions": {
      "type": "array",
      "description": "List of current promotions and deals",
      "items": {
        "$ref": "#/definitions/promotion"
      }
    },
    "search": {
      "type": "object",
      "description": "Search query and results",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query string"
        },
        "results": {
          "type": "array",
          "description": "List of products matching the query",
          "items": {
            "$ref": "#/definitions/product"
          }
        },
        "filters": {
          "type": "array",
          "description": "Available filters for refining search results",
          "items": {
            "$ref": "#/definitions/filter"
          }
        }
      },
      "required": [
        "query"
      ]
    }
  },
  "definitions": {
    "product": {
      "type": "object",
      "description": "An individual product listing",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Unique identifier for the product",
          "format": "uuid"
        },
        "title": {
          "type": "string",
          "description": "Product title"
        },
        "description": {
          "type": "string",
          "description": "Product description"
        },
        "price": {
          "type": "number",
          "description": "Product price",
          "format": "float",
          "minimum": 0
        },
        "currency": {
          "type": "string",
          "description": "Currency code (e.g., USD, EUR)",
          "pattern": "^[A-Z]{3}$"
        },
        "discountPrice": {
          "type": "number",
          "description": "Discounted price, if applicable",
          "format": "float",
          "minimum": 0
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the main product image",
          "format": "URL"
        },
        "imageUrls": {
          "type": "array",
          "description": "List of product images",
          "items": {
            "type": "string",
            "format": "URL"
          }
        },
        "sellerId": {
          "type": "string",
          "description": "ID of the seller",
          "format": "uuid"
        },
        "categoryId": {
          "type": "string",
          "description": "ID of the product category",
          "format": "uuid"
        },
        "shippingOptions": {
          "type": "array",
          "description": "Available shipping options",
          "items": {
            "$ref": "#/definitions/shippingOption"
          }
        },
        "ratings": {
          "type": "object",
          "description": "Product ratings and reviews",
          "properties": {
            "averageRating": {
              "type": "number",
              "description": "Average rating out of 5",
              "minimum": 0,
              "maximum": 5
            },
            "numberOfReviews": {
              "type": "integer",
              "description": "Number of reviews",
              "minimum": 0
            }
          }
        },
        "inventory": {
          "type": "integer",
          "description": "Available quantity in stock",
          "minimum": 0
        },
        "attributes": {
          "type": "array",
          "description": "List of product attributes (e.g., color, size)",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Attribute name"
              },
              "value": {
                "type": "string",
                "description": "Attribute value"
              }
            },
            "required": [
              "name",
              "value"
            ]
          }
        },
        "variants": {
          "type": "array",
          "description": "List of product variants, if available",
          "items": {
            "type": "object",
            "description": "A specific variant of the product",
            "properties": {
              "variantId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the product variant"
              },
              "attributes": {
                "type": "array",
                "description": "List of attributes specific to this variant",
                "items": {
                  "$ref": "#/definitions/product#/properties/attributes/items"
                }
              },
              "price": {
                "type": "number",
                "description": "Variant price",
                "format": "float",
                "minimum": 0
              },
              "imageUrl": {
                "type": "string",
                "format": "URL",
                "description": "Image URL for this variant"
              },
              "inventory": {
                "type": "integer",
                "description": "Inventory for this variant",
                "minimum": 0
              }
            },
            "required": [
              "variantId",
              "attributes",
              "price"
            ]
          }
        }
      },
      "required": [
        "productId",
        "title",
        "price",
        "currency",
        "imageUrl",
        "sellerId",
        "categoryId"
      ]
    },
    "category": {
      "type": "object",
      "description": "A product category",
      "properties": {
        "categoryId": {
          "type": "string",
          "description": "Unique identifier for the category",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "parentCategoryId": {
          "type": "string",
          "description": "ID of the parent category, if any",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image representing the category",
          "format": "URL"
        }
      },
      "required": [
        "categoryId",
        "name"
      ]
    },
    "seller": {
      "type": "object",
      "description": "A seller on AliExpress",
      "properties": {
        "sellerId": {
          "type": "string",
          "description": "Unique identifier for the seller",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Seller name or store name"
        },
        "rating": {
          "type": "number",
          "description": "Average seller rating",
          "minimum": 0,
          "maximum": 5
        },
        "numberOfReviews": {
          "type": "integer",
          "description": "Number of reviews for the seller",
          "minimum": 0
        },
        "logoUrl": {
          "type": "string",
          "description": "Seller's logo URL",
          "format": "URL"
        },
        "positiveFeedbackRate": {
          "type": "number",
          "description": "Positive feedback percentage",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "sellerId",
        "name",
        "rating",
        "numberOfReviews"
      ]
    },
    "order": {
      "type": "object",
      "description": "A user's order",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Unique identifier for the order",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "ID of the user who placed the order",
          "format": "uuid"
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time when the order was placed",
          "format": "date-time"
        },
        "items": {
          "type": "array",
          "description": "List of items in the order",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "string",
                "description": "ID of the product in the order",
                "format": "uuid"
              },
              "variantId": {
                "type": "string",
                "description": "ID of the selected variant, if any",
                "format": "uuid"
              },
              "quantity": {
                "type": "integer",
                "description": "Quantity ordered",
                "minimum": 1
              },
              "price": {
                "type": "number",
                "description": "Price per item at the time of order",
                "format": "float",
                "minimum": 0
              }
            },
            "required": [
              "productId",
              "quantity",
              "price"
            ]
          }
        },
        "totalPrice": {
          "type": "number",
          "description": "Total price of the order",
          "format": "float",
          "minimum": 0
        },
        "shippingAddress": {
          "$ref": "#/definitions/address"
        },
        "shippingOption": {
          "$ref": "#/definitions/shippingOption"
        },
        "paymentStatus": {
          "type": "string",
          "description": "Status of the payment (e.g., pending, paid, failed)",
          "enum": [
            "pending",
            "paid",
            "failed",
            "refunded"
          ]
        },
        "orderStatus": {
          "type": "string",
          "description": "Status of the order (e.g., processing, shipped, delivered, canceled)",
          "enum": [
            "processing",
            "shipped",
            "delivered",
            "canceled",
            "returned"
          ]
        },
        "trackingNumber": {
          "type": "string",
          "description": "Shipping tracking number, if available"
        }
      },
      "required": [
        "orderId",
        "userId",
        "orderDate",
        "items",
        "totalPrice",
        "shippingAddress",
        "paymentStatus",
        "orderStatus"
      ]
    },
    "user": {
      "type": "object",
      "description": "An AliExpress user",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique identifier for the user",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "User's name"
        },
        "email": {
          "type": "string",
          "description": "User's email address",
          "format": "email"
        },
        "addresses": {
          "type": "array",
          "description": "User's saved addresses",
          "items": {
            "$ref": "#/definitions/address"
          }
        }
      },
      "required": [
        "userId",
        "email"
      ]
    },
    "address": {
      "type": "object",
      "description": "A shipping or billing address",
      "properties": {
        "fullName": {
          "type": "string",
          "description": "Full name of the recipient"
        },
        "streetAddress": {
          "type": "string",
          "description": "Street address"
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "stateOrProvince": {
          "type": "string",
          "description": "State or province"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code"
        },
        "country": {
          "type": "string",
          "description": "Country"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number"
        }
      },
      "required": [
        "fullName",
        "streetAddress",
        "city",
        "postalCode",
        "country"
      ]
    },
    "shippingOption": {
      "type": "object",
      "description": "A shipping option",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the shipping option (e.g., Standard Shipping, Expedited Shipping)"
        },
        "estimatedDeliveryTime": {
          "type": "string",
          "description": "Estimated delivery time (e.g., 15-30 days)"
        },
        "cost": {
          "type": "number",
          "description": "Shipping cost",
          "format": "float",
          "minimum": 0
        },
        "shippingCompany": {
          "type": "string",
          "description": "Name of the company handling the shipment (e.g., AliExpress, Cainiao, DHL)"
        }
      },
      "required": [
        "name",
        "estimatedDeliveryTime",
        "cost"
      ]
    },
    "promotion": {
      "type": "object",
      "description": "A promotion or deal",
      "properties": {
        "promotionId": {
          "type": "string",
          "description": "Unique identifier for the promotion",
          "format": "uuid"
        },
        "title": {
          "type": "string",
          "description": "Title of the promotion"
        },
        "description": {
          "type": "string",
          "description": "Description of the promotion"
        },
        "discountType": {
          "type": "string",
          "description": "Type of discount (e.g., percentage, fixed amount)",
          "enum": [
            "percentage",
            "fixed"
          ]
        },
        "discountValue": {
          "type": "number",
          "description": "Value of the discount (e.g., 10 for 10%, 5 for $5 off)",
          "minimum": 0
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the promotion",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "description": "End date of the promotion",
          "format": "date"
        },
        "applicableProducts": {
          "type": "array",
          "description": "List of product IDs to which the promotion applies, if specific",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "applicableCategories": {
          "type": "array",
          "description": "List of category IDs to which the promotion applies, if specific",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "minimumPurchaseAmount": {
          "type": "number",
          "description": "Minimum purchase amount required for the promotion, if any",
          "format": "float",
          "minimum": 0
        },
        "bannerImageUrl": {
          "type": "string",
          "description": "URL of the promotion banner image",
          "format": "URL"
        }
      },
      "required": [
        "promotionId",
        "title",
        "discountType",
        "discountValue",
        "startDate",
        "endDate"
      ]
    },
    "filter": {
      "type": "object",
      "description": "A filter option for search results",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the filter (e.g., Price, Color, Brand)"
        },
        "type": {
          "type": "string",
          "description": "Type of filter (e.g., range, selection)",
          "enum": [
            "range",
            "selection"
          ]
        },
        "options": {
          "type": "array",
          "description": "Available options for the filter",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": [
                  "string",
                  "number"
                ],
                "description": "Value of the filter option"
              },
              "count": {
                "type": "integer",
                "description": "Number of products matching this option",
                "minimum": 0
              }
            },
            "required": [
              "value",
              "count"
            ]
          }
        },
        "min": {
          "type": "number",
          "description": "Minimum value for range filters"
        },
        "max": {
          "type": "number",
          "description": "Maximum value for range filters"
        }
      },
      "required": [
        "name",
        "type"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Amazon Shopping",
  "description": "JSON Schema for Amazon Shopping resources and interactions.",
  "type": "object",
  "properties": {
    "user": {
      "type": "object",
      "description": "Represents a user on Amazon.",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the user."
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "password": {
          "type": "string",
          "description": "User's password (should be hashed in real systems)."
        },
        "addresses": {
          "type": "array",
          "description": "List of user's saved addresses.",
          "items": {
            "$ref": "#/definitions/address"
          }
        },
        "paymentMethods": {
          "type": "array",
          "description": "List of user's saved payment methods.",
          "items": {
            "$ref": "#/definitions/paymentMethod"
          }
        },
        "wishlists": {
          "type": "array",
          "description": "List of user's wishlists",
          "items": {
            "$ref": "#/definitions/wishlist"
          }
        },
        "shoppingCart": {
          "$ref": "#/definitions/shoppingCart",
          "description": "User's current shopping cart."
        },
        "orderHistory": {
          "type": "array",
          "description": "List of user's past orders",
          "items": {
            "$ref": "#/definitions/order"
          }
        },
        "isPrimeMember": {
          "type": "boolean",
          "description": "Indicates if the user is an Amazon Prime member."
        }
      },
      "required": [
        "userId",
        "email",
        "password"
      ]
    },
    "product": {
      "type": "object",
      "description": "Represents a product on Amazon.",
      "properties": {
        "productId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the product."
        },
        "title": {
          "type": "string",
          "description": "Product title."
        },
        "description": {
          "type": "string",
          "description": "Product description."
        },
        "category": {
          "type": "string",
          "description": "Product category."
        },
        "subcategory": {
          "type": "string",
          "description": "Product subcategory."
        },
        "brand": {
          "type": "string",
          "description": "Product brand."
        },
        "price": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Product price."
        },
        "currency": {
          "type": "string",
          "description": "Currency of the price (e.g., USD, EUR)."
        },
        "images": {
          "type": "array",
          "description": "List of product image URLs.",
          "items": {
            "type": "string",
            "format": "URL"
          }
        },
        "stockQuantity": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of units in stock."
        },
        "seller": {
          "$ref": "#/definitions/seller"
        },
        "ratings": {
          "$ref": "#/definitions/ratings",
          "description": "Product ratings information."
        },
        "reviews": {
          "type": "array",
          "description": "List of product reviews.",
          "items": {
            "$ref": "#/definitions/review"
          }
        },
        "shippingOptions": {
          "type": "array",
          "description": "List of available shipping options.",
          "items": {
            "$ref": "#/definitions/shippingOption"
          }
        },
        "features": {
          "type": "array",
          "description": "List of product features (e.g., color, size).",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "availability": {
          "type": "string",
          "enum": [
            "In Stock",
            "Out of Stock",
            "Pre-order",
            "Backordered"
          ],
          "description": "Product availability status."
        }
      },
      "required": [
        "productId",
        "title",
        "price",
        "currency"
      ]
    },
    "seller": {
      "type": "object",
      "description": "Represents a seller on Amazon.",
      "properties": {
        "sellerId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the seller."
        },
        "sellerName": {
          "type": "string",
          "description": "Seller's name."
        },
        "sellerRating": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 5,
          "description": "Average rating of the seller."
        },
        "sellerRatingCount": {
          "type": "integer",
          "description": "Total number of ratings for the seller"
        }
      },
      "required": [
        "sellerId",
        "sellerName"
      ]
    },
    "order": {
      "type": "object",
      "description": "Represents an order placed on Amazon.",
      "properties": {
        "orderId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who placed the order."
        },
        "orderDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time the order was placed."
        },
        "items": {
          "type": "array",
          "description": "List of items in the order.",
          "items": {
            "$ref": "#/definitions/orderItem"
          }
        },
        "shippingAddress": {
          "$ref": "#/definitions/address",
          "description": "Shipping address for the order."
        },
        "paymentMethod": {
          "$ref": "#/definitions/paymentMethod",
          "description": "Payment method used for the order."
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Total amount of the order."
        },
        "orderStatus": {
          "type": "string",
          "enum": [
            "Processing",
            "Shipped",
            "Delivered",
            "Cancelled",
            "Returned"
          ],
          "description": "Current status of the order."
        },
        "shippingDetails": {
          "$ref": "#/definitions/shippingDetails"
        }
      },
      "required": [
        "orderId",
        "userId",
        "orderDate",
        "items",
        "shippingAddress",
        "paymentMethod",
        "totalAmount",
        "orderStatus"
      ]
    },
    "search": {
      "type": "object",
      "description": "Represents a search query and results on Amazon.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query string."
        },
        "category": {
          "type": "string",
          "description": "Category to filter search results (optional)."
        },
        "filters": {
          "type": "object",
          "description": "Additional filters for search results (e.g., price range, brand).",
          "properties": {
            "minPrice": {
              "type": "number"
            },
            "maxPrice": {
              "type": "number"
            },
            "brand": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rating": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          },
          "additionalProperties": true
        },
        "sort": {
          "type": "string",
          "enum": [
            "relevance",
            "price_asc",
            "price_desc",
            "newest",
            "rating"
          ],
          "description": "Sorting order for search results."
        },
        "page": {
          "type": "integer",
          "minimum": 1,
          "description": "Page number of results."
        },
        "results": {
          "type": "array",
          "description": "List of search results (products).",
          "items": {
            "$ref": "#/definitions/product"
          }
        },
        "totalResults": {
          "type": "integer",
          "description": "Total number of search results found."
        }
      },
      "required": [
        "query",
        "results",
        "totalResults"
      ]
    },
    "recommendation": {
      "type": "object",
      "description": "Represents a set of product recommendations.",
      "properties": {
        "recommendationId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the recommendation set."
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user for whom the recommendations are generated (optional)."
        },
        "basedOn": {
          "type": "string",
          "enum": [
            "browsing_history",
            "purchase_history",
            "similar_items",
            "trending"
          ],
          "description": "Basis for generating the recommendations."
        },
        "products": {
          "type": "array",
          "description": "List of recommended products.",
          "items": {
            "$ref": "#/definitions/product"
          }
        }
      },
      "required": [
        "recommendationId",
        "products"
      ]
    },
    "promotion": {
      "type": "object",
      "description": "Represents promotional offers or deals.",
      "properties": {
        "promotionId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the promotion."
        },
        "title": {
          "type": "string",
          "description": "Title of the promotion."
        },
        "description": {
          "type": "string",
          "description": "Description of the promotion."
        },
        "discountType": {
          "type": "string",
          "enum": [
            "percentage",
            "fixed_amount",
            "buy_x_get_y"
          ],
          "description": "Type of discount offered."
        },
        "discountValue": {
          "type": "number",
          "description": "Value of the discount (percentage or amount)."
        },
        "applicableProducts": {
          "type": "array",
          "description": "List of product IDs to which the promotion applies (optional).",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "Start date of the promotion."
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "End date of the promotion."
        }
      },
      "required": [
        "promotionId",
        "title",
        "discountType",
        "startDate",
        "endDate"
      ]
    }
  },
  "definitions": {
    "address": {
      "type": "object",
      "properties": {
        "addressId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the address."
        },
        "street": {
          "type": "string",
          "description": "Street address."
        },
        "city": {
          "type": "string",
          "description": "City."
        },
        "state": {
          "type": "string",
          "description": "State or province."
        },
        "zipCode": {
          "type": "string",
          "description": "Postal or ZIP code."
        },
        "country": {
          "type": "string",
          "description": "Country."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number associated with the address."
        },
        "isDefault": {
          "type": "boolean",
          "description": "Indicates if this is the default address."
        }
      },
      "required": [
        "street",
        "city",
        "state",
        "zipCode",
        "country"
      ]
    },
    "paymentMethod": {
      "type": "object",
      "properties": {
        "paymentMethodId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the payment method."
        },
        "cardType": {
          "type": "string",
          "enum": [
            "credit",
            "debit",
            "gift card"
          ],
          "description": "Type of payment method."
        },
        "cardNumber": {
          "type": "string",
          "description": "Card number (last 4 digits for display)."
        },
        "expiryMonth": {
          "type": "integer",
          "minimum": 1,
          "maximum": 12,
          "description": "Expiration month."
        },
        "expiryYear": {
          "type": "integer",
          "description": "Expiration year."
        },
        "billingAddress": {
          "$ref": "#/definitions/address"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Indicates if this is the default payment method."
        }
      },
      "required": [
        "paymentMethodId",
        "cardType"
      ]
    },
    "orderItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the product."
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "description": "Quantity of the product ordered."
        },
        "price": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Price per unit at the time of order."
        },
        "seller": {
          "$ref": "#/definitions/seller"
        }
      },
      "required": [
        "productId",
        "quantity",
        "price"
      ]
    },
    "ratings": {
      "type": "object",
      "properties": {
        "averageRating": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 5,
          "description": "Average rating of the product."
        },
        "ratingCount": {
          "type": "integer",
          "description": "Total number of ratings for the product."
        },
        "ratingDistribution": {
          "type": "object",
          "description": "Distribution of ratings (e.g., number of 5-star, 4-star ratings).",
          "properties": {
            "1": {
              "type": "integer"
            },
            "2": {
              "type": "integer"
            },
            "3": {
              "type": "integer"
            },
            "4": {
              "type": "integer"
            },
            "5": {
              "type": "integer"
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "averageRating",
        "ratingCount"
      ]
    },
    "review": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the review."
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who wrote the review."
        },
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "description": "Rating given in the review."
        },
        "title": {
          "type": "string",
          "description": "Title of the review."
        },
        "reviewText": {
          "type": "string",
          "description": "Content of the review."
        },
        "reviewDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time the review was submitted."
        },
        "helpfulVotes": {
          "type": "integer",
          "description": "Number of users who found the review helpful."
        },
        "totalVotes": {
          "type": "integer",
          "description": "Total number of votes on the review."
        },
        "verifiedPurchase": {
          "type": "boolean",
          "description": "Indicates if the reviewer purchased the product on Amazon"
        }
      },
      "required": [
        "reviewId",
        "userId",
        "rating",
        "reviewText",
        "reviewDate"
      ]
    },
    "shippingOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the shipping option (e.g., Standard, Expedited)."
        },
        "deliveryTime": {
          "type": "string",
          "description": "Estimated delivery time."
        },
        "cost": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Cost of the shipping option."
        }
      },
      "required": [
        "name",
        "deliveryTime",
        "cost"
      ]
    },
    "shippingDetails": {
      "type": "object",
      "properties": {
        "carrier": {
          "type": "string",
          "description": "Name of the shipping carrier."
        },
        "trackingNumber": {
          "type": "string",
          "description": "Tracking number for the shipment."
        },
        "estimatedDeliveryDate": {
          "type": "string",
          "format": "date",
          "description": "Estimated delivery date."
        },
        "shippingStatus": {
          "type": "string",
          "enum": [
            "Preparing for Shipment",
            "Shipped",
            "Out for Delivery",
            "Delivered",
            "Delayed"
          ],
          "description": "Current status of the shipment."
        }
      },
      "required": [
        "carrier",
        "trackingNumber"
      ]
    },
    "shoppingCart": {
      "type": "object",
      "properties": {
        "cartId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the cart."
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who owns the cart."
        },
        "items": {
          "type": "array",
          "description": "List of items in the cart.",
          "items": {
            "$ref": "#/definitions/cartItem"
          }
        },
        "subtotal": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Subtotal of the items in the cart (before tax and shipping)."
        }
      },
      "required": [
        "cartId",
        "items",
        "subtotal"
      ]
    },
    "cartItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the product in the cart."
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "description": "Quantity of the product in the cart."
        },
        "seller": {
          "$ref": "#/definitions/seller"
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "wishlist": {
      "type": "object",
      "properties": {
        "wishlistId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the wishlist"
        },
        "name": {
          "type": "string",
          "description": "Name of the wishlist"
        },
        "isPublic": {
          "type": "boolean",
          "description": "Indicates whether the wishlist is public or private"
        },
        "items": {
          "type": "array",
          "description": "List of products in the wishlist",
          "items": {
            "$ref": "#/definitions/product"
          }
        }
      },
      "required": [
        "wishlistId",
        "name",
        "items"
      ]
    }
  }
}{
  "type": "object",
  "title": "Angie's List Schema",
  "description": "JSON Schema representing the core data structures of Angie's List",
  "definitions": {
    "address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string",
          "description": "Street address"
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "state": {
          "type": "string",
          "description": "State (e.g., CA, NY)",
          "pattern": "^[A-Z]{2}$"
        },
        "zip": {
          "type": "string",
          "description": "Zip code",
          "pattern": "^\\d{5}(-\\d{4})?$"
        },
        "country": {
          "type": "string",
          "description": "Country (e.g., USA)",
          "default": "USA"
        }
      },
      "required": [
        "street",
        "city",
        "state",
        "zip"
      ]
    },
    "phoneNumber": {
      "type": "string",
      "description": "Phone number",
      "pattern": "^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$"
    },
    "rating": {
      "type": "number",
      "description": "Rating on a scale (e.g., 1-5)",
      "minimum": 1,
      "maximum": 5
    },
    "serviceCategory": {
      "type": "string",
      "description": "Category of service (e.g., Plumbing, Roofing)",
      "enum": [
        "Plumbing",
        "Roofing",
        "HVAC",
        "Electrician",
        "Landscaping",
        "Remodeling",
        "Painting",
        "Appliance Repair",
        "Pest Control",
        "Cleaning",
        "Handyman",
        "Other"
      ]
    },
    "review": {
      "type": "object",
      "properties": {
        "reviewerId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who wrote the review"
        },
        "reviewDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time the review was posted"
        },
        "rating": {
          "$ref": "#/definitions/rating"
        },{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "BigCommerce App Schema",
  "description": "Schema for defining a BigCommerce App",
  "type": "object",
  "required": [
    "auth_callback",
    "load_callback",
    "uninstall_callback",
    "scopes",
    "app_name",
    "app_description",
    "app_version",
    "author_name",
    "author_email",
    "author_url"
  ],
  "properties": {
    "auth_callback": {
      "type": "string",
      "format": "url",
      "description": "URL to receive OAuth2 authentication requests. This is where BigCommerce will redirect the user during the app installation process."
    },
    "load_callback": {
      "type": "string",
      "format": "url",
      "description": "URL to receive requests when the app is loaded in the BigCommerce control panel or in other designated places within BigCommerce."
    },
    "uninstall_callback": {
      "type": "string",
      "format": "url",
      "description": "URL to receive a notification when the app is uninstalled from a store. This is where you can perform cleanup tasks like revoking API tokens or removing data."
    },
    "remove_user_callback": {
      "type": "string",
      "format": "url",
      "description": "URL called when a user is removed from a store. Useful for revoking their access to your app."
    },
    "scopes": {
      "type": "string",
      "description": "Space-separated list of OAuth scopes the app requires. Scopes define the permissions your app needs to access specific data or perform actions on behalf of the user. Example: 'store_v2_products store_v2_orders'",
      "examples": [
        "store_v2_products store_v2_orders store_v2_customers",
        "store_v2_content"
      ]
    },
    "app_name": {
      "type": "string",
      "description": "Name of the app. This will be displayed to users during the installation process and in the BigCommerce control panel.",
      "maxLength": 255
    },
    "app_description": {
      "type": "string",
      "description": "A detailed description of the app's functionality. This will be displayed to users during the installation process."
    },
    "app_version": {
      "type": "string",
      "description": "Version of the app. Follow semantic versioning (e.g., 1.0.0).",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "examples": [
        "1.0.0",
        "2.5.1"
      ]
    },
    "author_name": {
      "type": "string",
      "description": "Name of the app developer or company.",
      "maxLength": 255
    },
    "author_email": {
      "type": "string",
      "format": "email",
      "description": "Contact email address of the app developer or company."
    },
    "author_url": {
      "type": "string",
      "format": "url",
      "description": "Website URL of the app developer or company."
    },
    "logo": {
      "type": "string",
      "format": "url",
      "description": "URL to the app's logo. Recommended size is 250x250 pixels."
    },
    "support_email": {
      "type": "string",
      "format": "email",
      "description": "Email address for customer support inquiries."
    },
    "support_url": {
      "type": "string",
      "format": "url",
      "description": "URL to a support page or documentation for the app."
    },
    "privacy_policy_url": {
      "type": "string",
      "format": "url",
      "description": "URL to the app's privacy policy."
    },
    "app_type": {
      "type": "string",
      "description": "Indicates the type of app being developed. Can be used to categorize apps (e.g., 'marketing', 'inventory', 'shipping')",
      "examples": [
        "marketing",
        "inventory",
        "shipping"
      ]
    },
    "features": {
      "type": "array",
      "description": "An array of features provided by the app.",
      "items": {
        "type": "string",
        "description": "A description of a specific feature."
      }
    },
    "external_ids": {
      "type": "object",
      "description": "External identifiers if the app interacts with other platforms.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "is_visible": {
      "type": "boolean",
      "description": "Determines if the app is visible in the App Marketplace. Defaults to true for draft apps.",
      "default": true
    },
    "dev_tools": {
      "type": "object",
      "description": "Settings specifically for use during development.",
      "properties": {
        "debug_callback": {
          "type": "string",
          "format": "url",
          "description": "Optional URL for receiving debug information during development."
        }
      }
    },
    "translations": {
      "type": "object",
      "description": "Object containing translations of the app's metadata for different locales.",
      "additionalProperties": {
        "type": "object",
        "description": "Translation for a specific locale.",
        "properties": {
          "app_name": {
            "type": "string",
            "description": "Translated app name."
          },
          "app_description": {
            "type": "string",
            "description": "Translated app description."
          }
        },
        "additionalProperties": false
      },
      "examples": [
        {
          "es": {
            "app_name": "Mi Aplicación",
            "app_description": "Descripción de mi aplicación en español."
          },
          "fr": {
            "app_name": "Mon Application",
            "app_description": "Description de mon application en français."
          }
        }
      ]
    }
  },
  "additionalProperties": false
}{
  "type": "object",
  "title": "Craigslist",
  "description": "JSON Schema for a simplified representation of Craigslist data.",
  "properties": {
    "location": {
      "type": "object",
      "description": "Location information for the listing or search.",
      "properties": {
        "city": {
          "type": "string",
          "description": "The city (e.g., 'san francisco')",
          "examples": [
            "san francisco",
            "new york",
            "los angeles"
          ]
        },
        "area": {
          "type": "string",
          "description": "The specific area within the city (e.g., 'soma / south beach')",
          "examples": [
            "soma / south beach",
            "downtown",
            "mission district"
          ]
        },
        "state": {
          "type": "string",
          "description": "The state or region (e.g., 'CA')",
          "examples": [
            "CA",
            "NY",
            "TX"
          ]
        },
        "country": {
          "type": "string",
          "description": "The country (e.g., 'US')",
          "examples": [
            "US",
            "CA",
            "GB"
          ]
        }
      },
      "required": [
        "city"
      ]
    },
    "categories": {
      "type": "array",
      "description": "List of categories and subcategories available on Craigslist.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category.",
            "examples": [
              "community",
              "housing",
              "jobs",
              "for sale",
              "services"
            ]
          },
          "subcategories": {
            "type": "array",
            "description": "List of subcategories within the category.",
            "items": {
              "type": "string",
              "examples": [
                "activities",
                "apartments / housing",
                "accounting & finance",
                "cars+trucks",
                "automotive services"
              ]
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "postings": {
      "type": "array",
      "description": "List of individual postings.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the posting.",
            "examples": [
              "7624518951"
            ]
          },
          "title": {
            "type": "string",
            "description": "Title of the posting.",
            "examples": [
              "Spacious 1-bedroom apartment in downtown",
              "Used Honda Civic for sale",
              "Looking for a freelance web developer"
            ]
          },
          "url": {
            "type": "string",
            "format": "URL",
            "description": "URL to the full posting.",
            "examples": [
              "https://sfbay.craigslist.org/sfc/apa/d/san-francisco-spacious-1-bedroom/7624518951.html"
            ]
          },
          "date_posted": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the posting was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the posting was last updated."
          },
          "location": {
            "$ref": "#/properties/location"
          },
          "category": {
            "type": "string",
            "description": "Main category of the posting.",
            "examples": [
              "housing",
              "for sale",
              "jobs"
            ]
          },
          "subcategory": {
            "type": "string",
            "description": "Subcategory of the posting.",
            "examples": [
              "apartments / housing",
              "cars+trucks",
              "web / info design"
            ]
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price of the item or service, if applicable.",
            "examples": [
              1500,
              12500.50
            ]
          },
          "body": {
            "type": "string",
            "description": "Main body text of the posting.",
            "examples": [
              "This beautiful apartment features hardwood floors, a modern kitchen, and plenty of natural light."
            ]
          },
          "images": {
            "type": "array",
            "description": "List of image URLs associated with the posting.",
            "items": {
              "type": "string",
              "format": "URL"
            }
          },
          "attributes": {
            "type": "array",
            "description": "List of attributes specific to the posting's category (e.g., bedrooms, bathrooms for housing).",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": [
                    "bedrooms",
                    "bathrooms",
                    "make / manufacturer",
                    "condition"
                  ]
                },
                "value": {
                  "type": "string",
                  "examples": [
                    "2",
                    "1.5",
                    "Honda",
                    "excellent"
                  ]
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "contact": {
            "type": "object",
            "description": "Contact information for the posting",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "examples": [
                  "a1b2c3d4e5@example.com"
                ]
              },
              "phone_number": {
                "type": "string",
                "examples": [
                  "(123) 456-7890"
                ]
              },
              "show_contact_info": {
                "type": "boolean",
                "description": "Whether or not the contact info is visible to the public"
              }
            },
            "required": [
              "show_contact_info"
            ]
          }
        },
        "required": [
          "id",
          "title",
          "url",
          "date_posted",
          "location",
          "category",
          "subcategory"
        ]
      }
    },
    "search": {
      "type": "object",
      "description": "Schema for a search query on Craigslist",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search term(s) entered by the user",
          "examples": [
            "bicycle",
            "software engineer",
            "2 bedroom apartment"
          ]
        },
        "location": {
          "$ref": "#/properties/location"
        },
        "category": {
          "type": "string",
          "description": "Main category to search within"
        },
        "subcategory": {
          "type": "string",
          "description": "Subcategory to search within"
        },
        "min_price": {
          "type": "number",
          "description": "Minimum price filter"
        },
        "max_price": {
          "type": "number",
          "description": "Maximum price filter"
        },
        "search_title_only": {
          "type": "boolean",
          "description": "Whether to search only in titles"
        },
        "has_image": {
          "type": "boolean",
          "description": "Whether to only include postings with images"
        },
        "posted_today": {
          "type": "boolean",
          "description": "Whether to only include postings from today"
        },
        "bundle_duplicates": {
          "type": "boolean",
          "description": "Whether to bundle duplicate postings"
        },
        "other_filters": {
          "type": "array",
          "description": "Other category-specific filters",
          "items": {
            "type": "object",
            "properties": {
              "filter_name": {
                "type": "string"
              },
              "filter_value": {
                "type": "string"
              }
            },
            "required": [
              "filter_name",
              "filter_value"
            ]
          }
        }
      },
      "required": [
        "query",
        "location"
      ]
    }
  },
  "required": [
    "location",
    "categories"
  ]
}{
  "type": "object",
  "title": "OfferUp App Schema",
  "description": "A JSON Schema representing the core data structures of the OfferUp app.",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of registered users.",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "items": {
      "type": "array",
      "description": "List of items for sale.",
      "items": {
        "$ref": "#/definitions/Item"
      }
    },
    "categories": {
      "type": "array",
      "description": "List of item categories.",
      "items": {
        "$ref": "#/definitions/Category"
      }
    },
    "messages": {
      "type": "array",
      "description": "List of messages exchanged between users.",
      "items": {
        "$ref": "#/definitions/Message"
      }
    },
    "transactions": {
      "type": "array",
      "description": "Records of completed transactions",
      "items": {
        "$ref": "#/definitions/Transaction"
      }
    }

  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "User's display name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "password": {
          "type": "string",
          "description": "User's password (hashed and salted in a real implementation)."
        },
        "phoneNumber": {
          "type": "string",
          "description": "User's phone number."
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "User's location for local listings."
        },
        "profilePicture": {
          "type": "string",
          "format": "URL",
          "description": "URL to the user's profile picture."
        },
        "rating": {
          "type": "number",
          "description": "Average user rating (e.g., 4.5 out of 5)",
          "minimum": 0,
          "maximum": 5
        },
        "joinDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the user joined."
        },
        "isVerified": {
          "type": "boolean",
          "description": "Indicates whether the user's identity has been verified."
        }
      },
      "required": [
        "userId",
        "username",
        "email",
        "password"
      ]
    },
    "Item": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the item."
        },
        "sellerId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user selling the item."
        },
        "title": {
          "type": "string",
          "description": "Title or name of the item."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the item."
        },
        "price": {
          "type": "number",
          "format": "float",
          "description": "Price of the item.",
          "minimum": 0
        },
        "condition": {
          "type": "string",
          "enum": [
            "New",
            "Like New",
            "Good",
            "Fair",
            "Poor"
          ],
          "description": "Condition of the item."
        },
        "categoryId": {
          "type": "string",
          "description": "ID of the category the item belongs to."
        },
        "photos": {
          "type": "array",
          "description": "List of URLs to photos of the item.",
          "items": {
            "type": "string",
            "format": "URL"
          }
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "Location of the item."
        },
        "postDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the item was posted."
        },
        "status": {
          "type": "string",
          "enum": [
            "Available",
            "Sold",
            "Pending",
            "Removed"
          ],
          "description": "Current status of the item"
        },
        "shippingAvailable": {
          "type": "boolean",
          "description": "Indicates whether shipping is available for this item."
        },
        "localPickupOnly": {
          "type": "boolean",
          "description": "Indicates whether this item is only available for local pickup."
        }

      },
      "required": [
        "itemId",
        "sellerId",
        "title",
        "description",
        "price",
        "condition",
        "categoryId",
        "photos",
        "location",
        "postDate"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category (e.g., 'Electronics', 'Furniture')."
        },
        "parentCategoryId": {
          "type": ["string", "null"],
          "description": "ID of the parent category, if it's a subcategory. Null if it's a top-level category."
        }
      },
      "required": [
        "categoryId",
        "name"
      ]
    },
    "Location": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "Latitude of the location."
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "Longitude of the location."
        },
        "zipCode": {
          "type": "string",
          "description": "Postal or ZIP code of the location."
        },
        "city": {
          "type": "string",
          "description": "City name."
        },
        "state": {
          "type": "string",
          "description": "State or province name."
        }

      },
      "required": [
        "latitude",
        "longitude"
      ]
    },
    "Message": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the message."
        },
        "senderId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who sent the message."
        },
        "receiverId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who received the message."
        },
        "itemId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the item related to the conversation."
        },
        "content": {
          "type": "string",
          "description": "Text content of the message."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the message was sent."
        },
        "isRead": {
          "type": "boolean",
          "description": "Indicates whether the message has been read by the receiver."
        }
      },
      "required": [
        "messageId",
        "senderId",
        "receiverId",
        "itemId",
        "content",
        "timestamp"
      ]
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the transaction."
        },
        "buyerId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who bought the item."
        },
        "sellerId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who sold the item."
        },
        "itemId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the item that was sold."
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the transaction took place."
        },
        "finalPrice": {
          "type": "number",
          "format": "float",
          "description": "Final agreed-upon price of the item.",
          "minimum": 0
        },
        "paymentMethod": {
          "type": "string",
          "description": "Method of payment used (e.g., 'Cash', 'OfferUp Payments')."
        },
        "shippingInfo": {
          "type": "object",
          "description": "Details about shipping if applicable.",
          "properties": {
            "trackingNumber": {
              "type": "string",
              "description": "Tracking number of the shipment"
            },
            "carrier": {
              "type": "string",
              "description": "Name of the shipping carrier"
            },
            "shippingCost": {
              "type": "number",
              "format": "float",
              "description": "Cost of shipping",
              "minimum": 0
            }
          }
        }
      },
      "required": [
        "transactionId",
        "buyerId",
        "sellerId",
        "itemId",
        "transactionDate",
        "finalPrice"
      ]
    }
  }
}{
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of your app.",
      "minLength": 3,
      "maxLength": 60,
      "example": "My Awesome App"
    },
    "api_client": {
      "type": "object",
      "description": "API client configuration.",
      "properties": {
        "api_key": {
          "type": "string",
          "description": "Your app's API key.",
          "example": "your_api_key"
        },
        "api_secret_key": {
          "type": "string",
          "description": "Your app's API secret key.",
          "example": "your_api_secret_key"
        },
        "scopes": {
          "type": "array",
          "description": "The access scopes your app needs.",
          "items": {
            "type": "string",
            "enum": [
              "read_all_orders",
              "read_assigned_fulfillment_orders",
              "read_checkouts",
              "read_content",
              "read_customers",
              "read_draft_orders",
              "read_fulfillments",
              "read_gift_cards",
              "read_inventory",
              "read_locales",
              "read_locations",
              "read_merchant_managed_fulfillment_orders",
              "read_orders",
              "read_price_rules",
              "read_products",
              "read_product_listings",
              "read_reports",
              "read_resource_feedbacks",
              "read_script_tags",
              "read_shipping",
              "read_shopify_payments_disputes",
              "read_shopify_payments_payouts",
              "read_themes",
              "read_translations",
              "write_assigned_fulfillment_orders",
              "write_checkouts",
              "write_content",
              "write_customers",
              "write_draft_orders",
              "write_fulfillments",
              "write_gift_cards",
              "write_inventory",
              "write_locales",
              "write_locations",
              "write_merchant_managed_fulfillment_orders",
              "write_orders",
              "write_price_rules",
              "write_products",
              "write_reports",
              "write_resource_feedbacks",
              "write_script_tags",
              "write_shipping",
              "write_themes",
              "write_translations",
              "unauthenticated_read_checkouts",
              "unauthenticated_read_content",
              "unauthenticated_read_customers",
              "unauthenticated_read_customer_tags",
              "unauthenticated_read_product_listings",
              "unauthenticated_read_product_tags",
              "unauthenticated_read_product_inventory",
              "unauthenticated_read_collection_listings",
              "unauthenticated_write_checkouts",
              "unauthenticated_write_customers"
            ]
          },
          "example": [
            "read_products",
            "write_orders"
          ]
        },
        "redirect_uris": {
          "type": "array",
          "description": "Allowed redirection URLs after installation.",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "example": [
            "https://myapp.com/auth/shopify/callback"
          ]
        },
        "webhook_subscriptions": {
          "type": "array",
          "description": "Webhook subscriptions for your app.",
          "items": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "The webhook topic.",
                "enum": [
                  "app/uninstalled",
                  "carts/create",
                  "carts/update",
                  "checkouts/create",
                  "checkouts/delete",
                  "checkouts/update",
                  "collections/create",
                  "collections/delete",
                  "collections/update",
                  "collection_listings/add",
                  "collection_listings/remove",
                  "collection_listings/update",
                  "customers/create",
                  "customers/delete",
                  "customers/disable",
                  "customers/enable",
                  "customers/update",
                  "customer_groups/create",
                  "customer_groups/delete",
                  "customer_groups/update",
                  "draft_orders/create",
                  "draft_orders/delete",
                  "draft_orders/update",
                  "fulfillments/create",
                  "fulfillments/update",
                  "fulfillment_events/create",
                  "fulfillment_events/delete",
                  "inventory_items/create",
                  "inventory_items/delete",
                  "inventory_items/update",
                  "inventory_levels/connect",
                  "inventory_levels/disconnect",
                  "inventory_levels/update",
                  "locales/create",
                  "locales/update",
                  "locations/create",
                  "locations/delete",
                  "locations/update",
                  "orders/cancelled",
                  "orders/create",
                  "orders/delete",
                  "orders/edited",
                  "orders/fulfilled",
                  "orders/paid",
                  "orders/partially_fulfilled",
                  "orders/updated",
                  "order_transactions/create",
                  "products/create",
                  "products/delete",
                  "products/update",
                  "product_listings/add",
                  "product_listings/remove",
                  "product_listings/update",
                  "refunds/create",
                  "shop/update",
                  "themes/create",
                  "themes/delete",
                  "themes/publish",
                  "themes/update"
                ]
              },
              "address": {
                "type": "string",
                "description": "The URL where the webhook payload will be sent.",
                "format": "uri",
                "example": "https://myapp.com/webhooks/orders/create"
              },
              "format": {
                "type": "string",
                "description": "The format of the webhook payload (default: json).",
                "enum": [
                  "json",
                  "xml"
                ],
                "default": "json"
              },
              "private_metafield_namespaces": {
                "type": "array",
                "description": "An optional list of namespaces for private metafields that should be included in the webhook payload.",
                "items":{
                  "type": "string"
                }
              },
              "metafield_namespaces": {
                "type": "array",
                "description": "An optional list of namespaces for public metafields that should be included in the webhook payload.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "topic",
              "address"
            ]
          }
        },
        "embedded": {
          "type": "boolean",
          "description": "Whether the app is embedded in the Shopify admin.",
          "default": true
        },
        "proxy_url": {
          "type": "string",
          "description": "The application proxy URL if applicable.",
          "format": "uri",
          "example": "https://myapp.com/app_proxy"
        },
        "pos_embedded": {
          "type": "boolean",
          "description": "Whether the app is embedded in Shopify POS.",
          "default": false
        }
      },
      "required": [
        "scopes",
        "redirect_uris"
      ]
    },
    "app_preferences": {
      "type": "object",
      "description": "App preferences configuration.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL where the app preferences are managed. Only used for embedded apps.",
          "format": "uri",
          "example": "https://myapp.com/app_preferences"
        }
      },
      "required": [
        "url"
      ]
    },
    "app_proxy": {
      "type": "object",
      "description": "Application proxy configuration",
      "properties": {
        "proxy_url": {
          "type": "string",
          "description": "The proxy URL to a page in your app. If omitted, app proxy will not be enabled.",
          "format": "uri",
          "example": "https://app.com/proxy"
        },
        "subpath_prefix": {
          "type": "string",
          "description": "The subpath prefix defined in your application proxy. Do not include leading or trailing slashes.",
          "example": "tools",
          "pattern": "^[a-z\\-]+$"
        },
        "subpath": {
          "type": "string",
          "description": "The subpath that the app proxy will forward requests to. Do not include leading or trailing slashes. This value cannot include the words: admin, apps, settings, or application.",
          "example": "my-app-name",
          "pattern": "^[a-z\\-]+$"
        }
      },
      "required": [
        "proxy_url",
        "subpath_prefix",
        "subpath"
      ]
    },
    "contact_email": {
      "type": "string",
      "description": "The contact email for your app.",
      "format": "email",
      "example": "support@myapp.com"
    },
    "app_setup": {
      "type": "object",
      "description": "App setup information.",
      "properties": {
        "getting_started": {
          "type": "string",
          "description": "A short description of what the app does and how to get started.",
          "maxLength": 500,
          "example": "This app helps you manage your inventory more efficiently. To get started, go to the 'Products' tab and enable the app for each product."
        },
        "banner_image": {
          "type": "string",
          "description": "URL to a banner image for your app (1600x900).",
          "format": "uri",
          "example": "https://myapp.com/assets/banner.jpg"
        },
        "icon_image": {
          "type": "string",
          "description": "URL to an icon image for your app (512x512).",
          "format": "uri",
          "example": "https://myapp.com/assets/icon.png"
        },
        "dev_store_preview_enabled": {
          "type": "boolean",
          "description": "Whether the app can be previewed on development stores before being installed.",
          "default": false
        },
        "privacy_policy_url": {
          "type": "string",
          "description": "The URL to your app's privacy policy.",
          "format": "uri",
          "example": "https://myapp.com/privacy"
        },
        "terms_and_conditions_url": {
          "type": "string",
          "description": "The URL to your app's terms and conditions.",
          "format": "uri",
          "example": "https://myapp.com/terms"
        },
        "app_credentials": {
          "type": "object",
          "description": "App credentials information.",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title for the credentials section",
              "example": "Connect your external service"
            },
            "description": {
              "type": "string",
              "description": "Description of what credentials are required",
              "example": "Enter your API key and secret to connect your account."
            }
          },
          "required": [
            "title",
            "description"
          ]
        },
        "features": {
          "type": "array",
          "description": "A list of the key features of your app.",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the feature.",
                "example": "Inventory Synchronization"
              },
              "description": {
                "type": "string",
                "description": "Description of the feature.",
                "example": "Keep your inventory levels in sync across multiple channels."
              },
              "image": {
                "type": "string",
                "description": "URL to an image showcasing the feature (600x400).",
                "format": "uri",
                "example": "https://myapp.com/assets/feature1.jpg"
              }
            },
            "required": [
              "title",
              "description"
            ]
          }
        }
      },
      "required": [
        "privacy_policy_url"
      ]
    }
  },
  "required": [
    "name",
    "api_client",
    "contact_email",
    "app_setup"
  ]
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Thumbtack App Schema",
  "description": "JSON Schema for the Thumbtack application data model",
  "type": "object",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of Thumbtack users",
      "items": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "description": "Unique identifier for the user",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "description": "User's first name",
            "minLength": 1,
            "maxLength": 255
          },
          "last_name": {
            "type": "string",
            "description": "User's last name",
            "minLength": 1,
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "description": "User's email address",
            "format": "email"
          },
          "phone_number": {
            "type": "string",
            "description": "User's phone number",
            "pattern": "^\\+?[1-9]\\d{1,14}$"
          },
          "password": {
            "type": "string",
            "description": "Hashed user password",
            "minLength": 8,
            "writeOnly": true
          },
          "profile_picture_url": {
            "type": "string",
            "description": "URL to the user's profile picture",
            "format": "URL"
          },
          "address": {
            "type": "object",
            "description": "User's address",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]
              },
              "zip_code": {
                "type": "string",
                "pattern": "^\\d{5}(-\\d{4})?$"
              }
            },
            "required": ["street", "city", "state", "zip_code"]
          },
          "is_pro": {
            "type": "boolean",
            "description": "Indicates if the user is a professional"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of user account creation",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp of last user account update",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "password",
          "address",
          "is_pro"
        ],
        "if": {
          "properties": {
            "is_pro": {
              "const": true
            }
          }
        },
        "then": {
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the professional's business",
              "minLength": 1,
              "maxLength": 255
            },
            "business_description": {
              "type": "string",
              "description": "Description of the professional's business"
            },
            "years_in_business": {
              "type": "integer",
              "description": "Number of years the professional has been in business"
            },
            "website_url": {
              "type": "string",
              "description": "URL to the professional's business website",
              "format": "URL"
            },
            "licenses": {
              "type": "array",
              "description": "List of professional's licenses",
              "items": {
                "type": "object",
                "properties": {
                  "license_type": {
                    "type": "string",
                    "description": "Type of license (e.g., contractor, electrician)"
                  },
                  "license_number": {
                    "type": "string",
                    "description": "License number"
                  },
                  "issuing_state": {
                    "type": "string",
                    "description": "State that issued the license",
                    "enum": ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]
                  },
                  "expiration_date": {
                    "type": "string",
                    "description": "Expiration date of the license",
                    "format": "date"
                  }
                },
                "required": [
                  "license_type",
                  "license_number",
                  "issuing_state",
                  "expiration_date"
                ]
              }
            },
            "insurance": {
              "type": "object",
              "description": "Professional's insurance information",
              "properties": {
                "insurance_provider": {
                  "type": "string",
                  "description": "Name of the insurance provider"
                },
                "policy_number": {
                  "type": "string",
                  "description": "Policy number"
                },
                "coverage_amount": {
                  "type": "number",
                  "description": "Coverage amount"
                },
                "expiration_date": {
                  "type": "string",
                  "description": "Expiration date of the insurance",
                  "format": "date"
                }
              },
              "required": [
                "insurance_provider",
                "policy_number",
                "coverage_amount",
                "expiration_date"
              ]
            },
            "service_area": {
              "type": "object",
              "description": "Area where the professional provides services",
              "properties": {
                "radius": {
                  "type": "integer",
                  "description": "Service radius in miles",
                  "minimum": 1
                },
                "zip_codes": {
                  "type": "array",
                  "description": "List of zip codes within the service area",
                  "items": {
                    "type": "string",
                    "pattern": "^\\d{5}(-\\d{4})?$"
                  }
                }
              },
              "required": ["radius"]
            }
          },
          "required": [
            "business_name",
            "business_description"
          ]
        }
      }
    },
    "services": {
      "type": "array",
      "description": "List of services offered on Thumbtack",
      "items": {
        "type": "object",
        "properties": {
          "service_id": {
            "type": "integer",
            "description": "Unique identifier for the service",
            "readOnly": true
          },
          "service_name": {
            "type": "string",
            "description": "Name of the service (e.g., House Cleaning, Handyman, Personal Training)",
            "minLength": 1,
            "maxLength": 255
          },
          "category": {
            "type": "string",
            "description": "Category of the service (e.g., Home Improvement, Wellness, Events)",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "Description of the service"
          },
          "average_price_range": {
            "type": "object",
            "description": "Average price range for the service",
            "properties": {
              "min": {
                "type": "number",
                "description": "Minimum price"
              },
              "max": {
                "type": "number",
                "description": "Maximum price"
              }
            }
          },
          "related_services": {
            "type": "array",
            "description": "List of related service IDs",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "service_name",
          "category"
        ]
      }
    },
    "pro_services": {
      "type": "array",
      "description": "List of services offered by professionals",
      "items": {
        "type": "object",
        "properties": {
          "pro_id": {
            "type": "integer",
            "description": "ID of the professional offering the service"
          },
          "service_id": {
            "type": "integer",
            "description": "ID of the service being offered"
          },
          "custom_price": {
            "type": "number",
            "description": "Price set by the professional for the service",
            "minimum": 0
          },
          "experience_level": {
            "type": "string",
            "description": "Experience level of the professional in this service",
            "enum": ["Beginner", "Intermediate", "Expert"]
          },
          "description": {
            "type": "string",
            "description": "Description provided by the professional for the service"
          },
          "qualifications": {
            "type": "array",
            "description": "List of qualifications related to the service",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "pro_id",
          "service_id"
        ]
      }
    },
    "projects": {
      "type": "array",
      "description": "List of customer projects",
      "items": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "integer",
            "description": "Unique identifier for the project",
            "readOnly": true
          },
          "customer_id": {
            "type": "integer",
            "description": "ID of the customer who created the project"
          },
          "service_id": {
            "type": "integer",
            "description": "ID of the service required for the project"
          },
          "title": {
            "type": "string",
            "description": "Title of the project",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the project"
          },
          "location": {
            "type": "object",
            "description": "Location where the project needs to be completed",
            "properties": {
              "address": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]
              },
              "zip_code": {
                "type": "string",
                "pattern": "^\\d{5}(-\\d{4})?$"
              }
            },
            "required": ["address", "city", "state", "zip_code"]
          },
          "budget": {
            "type": "number",
            "description": "Customer's budget for the project",
            "minimum": 0
          },
          "project_status": {
            "type": "string",
            "description": "Current status of the project",
            "enum": ["Open", "In Progress", "Completed", "Canceled"]
          },
          "start_date": {
            "type": "string",
            "description": "Desired start date for the project",
            "format": "date"
          },
          "timeline": {
            "type": "string",
            "description": "Customer's desired timeline for project completion",
            "enum": ["ASAP", "Within a week", "Within a month", "No rush"]
          },
          "photos": {
            "type": "array",
            "description": "URLs to photos related to the project",
            "items": {
              "type": "string",
              "format": "URL"
            }
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of project creation",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp of last project update",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "customer_id",
          "service_id",
          "title",
          "description",
          "location",
          "project_status"
        ]
      }
    },
    "quotes": {
      "type": "array",
      "description": "List of quotes submitted by professionals for projects",
      "items": {
        "type": "object",
        "properties": {
          "quote_id": {
            "type": "integer",
            "description": "Unique identifier for the quote",
            "readOnly": true
          },
          "project_id": {
            "type": "integer",
            "description": "ID of the project the quote is for"
          },
          "pro_id": {
            "type": "integer",
            "description": "ID of the professional who submitted the quote"
          },
          "price": {
            "type": "number",
            "description": "Price quoted by the professional",
            "minimum": 0
          },
          "message": {
            "type": "string",
            "description": "Message from the professional to the customer"
          },
          "quote_status": {
            "type": "string",
            "description": "Current status of the quote",
            "enum": ["Pending", "Accepted", "Declined", "Expired"]
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of quote submission",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp of last quote update",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "pro_id",
          "price",
          "message",
          "quote_status"
        ]
      }
    },
    "reviews": {
      "type": "array",
      "description": "List of reviews for professionals",
      "items": {
        "type": "object",
        "properties": {
          "review_id": {
            "type": "integer",
            "description": "Unique identifier for the review",
            "readOnly": true
          },
          "project_id": {
            "type": "integer",
            "description": "ID of the project associated with the review"
          },
          "pro_id": {
            "type": "integer",
            "description": "ID of the professional being reviewed"
          },
          "customer_id": {
            "type": "integer",
            "description": "ID of the customer who wrote the review"
          },
          "rating": {
            "type": "integer",
            "description": "Rating given to the professional (1-5)",
            "minimum": 1,
            "maximum": 5
          },
          "comment": {
            "type": "string",
            "description": "Review text written by the customer"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of review creation",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "pro_id",
          "customer_id",
          "rating"
        ]
      }
    },
    "messages": {
      "type": "array",
      "description": "List of messages between customers and professionals",
      "items": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "integer",
            "description": "Unique identifier for the message",
            "readOnly": true
          },
          "project_id": {
            "type": "integer",
            "description": "ID of the project the message is related to"
          },
          "sender_id": {
            "type": "integer",
            "description": "ID of the user who sent the message"
          },
          "recipient_id": {
            "type": "integer",
            "description": "ID of the user who received the message"
          },
          "message_content": {
            "type": "string",
            "description": "Content of the message"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of message creation",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "sender_id",
          "recipient_id",
          "message_content"
        ]
      }
    },
    "bookings": {
      "type": "array",
      "description": "List of project bookings between customers and professionals",
      "items": {
        "type": "object",
        "properties": {
          "booking_id": {
            "type": "integer",
            "description": "Unique identifier for the booking",
            "readOnly": true
          },
          "project_id": {
            "type": "integer",
            "description": "ID of the project associated with the booking"
          },
          "quote_id": {
            "type": "integer",
            "description": "ID of the quote that was accepted for the booking"
          },
          "pro_id": {
            "type": "integer",
            "description": "ID of the professional booked for the project"
          },
          "customer_id": {
            "type": "integer",
            "description": "ID of the customer who made the booking"
          },
          "start_date_time": {
            "type": "string",
            "description": "Scheduled start date and time for the project",
            "format": "date-time"
          },
          "end_date_time": {
            "type": "string",
            "description": "Scheduled end date and time for the project",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Current status of the booking",
            "enum": ["Scheduled", "In Progress", "Completed", "Canceled"]
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of booking creation",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "quote_id",
          "pro_id",
          "customer_id",
          "start_date_time",
          "status"
        ]
      }
    },
    "payments": {
      "type": "array",
      "description": "List of payments made for bookings",
      "items": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "integer",
            "description": "Unique identifier for the payment",
            "readOnly": true
          },
          "booking_id": {
            "type": "integer",
            "description": "ID of the booking the payment is for"
          },
          "customer_id": {
            "type": "integer",
            "description": "ID of the customer who made the payment"
          },
          "pro_id": {
            "type": "integer",
            "description": "ID of the professional who received the payment"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the payment",
            "minimum": 0
          },
          "payment_method": {
            "type": "string",
            "description": "Payment method used (e.g., credit card, debit card)",
            "enum": ["Credit Card", "Debit Card", "Other"]
          },
          "payment_status": {
            "type": "string",
            "description": "Current status of the payment",
            "enum": ["Pending", "Completed", "Failed", "Refunded"]
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp of payment creation",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "booking_id",
          "customer_id",
          "pro_id",
          "amount",
          "payment_method",
          "payment_status"
        ]
      }
    }
  },
  "required": [
    "users",
    "services",
    "pro_services",
    "projects",
    "quotes",
    "reviews",
    "messages",
    "bookings",
    "payments"
  ]
}