{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Google Docs Document",
  "description": "JSON Schema for a simplified representation of a Google Docs document.",
  "type": "object",
  "properties": {
    "documentId": {
      "type": "string",
      "description": "Unique identifier for the document.",
      "pattern": "^[a-zA-Z0-9_-]+$"
    },
    "title": {
      "type": "string",
      "description": "Title of the document."
    },
    "body": {
      "type": "object",
      "description": "Main content of the document.",
      "properties": {
        "content": {
          "type": "array",
          "description": "An array of structural elements that make up the document.",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/paragraph" },
              { "$ref": "#/definitions/table" },
              { "$ref": "#/definitions/image" },
              { "$ref": "#/definitions/horizontalRule" },
              { "$ref": "#/definitions/pageBreak" },
              { "$ref": "#/definitions/list" }
            ]
          }
        }
      },
      "required": [
        "content"
      ]
    },
    "revisionId": {
      "type": "string",
      "description": "Identifier representing the current revision of the document.",
      "pattern": "^[a-zA-Z0-9_-]+$"
    },
    "suggestionsViewMode": {
      "type": "string",
      "description": "The mode in which suggestions are viewed (e.g., SUGGESTIONS_INLINE, SUGGESTIONS_DISABLED).",
      "enum": ["SUGGESTIONS_INLINE", "SUGGESTIONS_DISABLED", "PREVIEW_WITHOUT_SUGGESTIONS"]
    },
    "inlineObjects": {
      "type": "object",
      "description": "Collection of inline objects (e.g., images, embedded objects) referenced within the document.",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "inlineObjectProperties": {
            "type": "object",
            "properties": {
              "embeddedObject": {
                "type": "object",
                "$ref": "#/definitions/embeddedObject"
              }
            }
          }
        }
      }
    },
    "namedStyles": {
      "type": "object",
      "description": "A collection of named styles that can be applied to content.",
      "properties": {
        "styles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/namedStyle"
          }
        }
      }
    },
    "lists": {
      "type": "object",
      "description": "A collection of lists used in the document, keyed by list ID.",
      "additionalProperties": {
        "$ref": "#/definitions/listDefinition"
      }
    }
  },
  "required": [
    "body"
  ],
  "definitions": {
    "paragraph": {
      "type": "object",
      "description": "A paragraph element.",
      "properties": {
        "paragraphStyle": {
          "$ref": "#/definitions/paragraphStyle"
        },
        "elements": {
          "type": "array",
          "description": "An array of content elements within the paragraph.",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/textRun" },
              { "$ref": "#/definitions/inlineObjectElement" },
              { "$ref": "#/definitions/footnoteReference" },
              { "$ref": "#/definitions/equation" }
            ]
          }
        },
        "bullet": {
          "type": "object",
          "description": "Bullet properties if the paragraph is part of a list.",
          "properties": {
            "listId": {
              "type": "string",
              "description": "The ID of the list this paragraph belongs to."
            },
            "nestingLevel": {
              "type": "integer",
              "description": "The nesting level of the bullet (0-based)."
            }
          }
        }
      },
      "required": [
        "elements"
      ]
    },
    "textRun": {
      "type": "object",
      "description": "A run of text with consistent styling.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The text content."
        },
        "textStyle": {
          "$ref": "#/definitions/textStyle"
        }
      },
      "required": [
        "content"
      ]
    },
    "inlineObjectElement": {
      "type": "object",
      "description": "Represents an inline object within the document content, such as an image or an embedded drawing.",
      "properties": {
        "inlineObjectId": {
          "type": "string",
          "description": "The ID that uniquely identifies this inline object within the document."
        },
        "textStyle": {
          "$ref": "#/definitions/textStyle"
        }
      },
      "required": [
        "inlineObjectId"
      ]
    },
    "footnoteReference": {
      "type": "object",
      "description": "Represents a reference to a footnote.",
      "properties": {
        "footnoteId": {
          "type": "string",
          "description": "The ID of the footnote to which this reference points."
        },
        "footnoteNumber": {
          "type": "string",
          "description": "The formatted number of the footnote, used for display purposes."
        },
        "textStyle": {
          "$ref": "#/definitions/textStyle"
        }
      },
      "required": [
        "footnoteId",
        "footnoteNumber"
      ]
    },
    "equation": {
      "type": "object",
      "description": "Represents an inline equation.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The equation content, potentially using a specific format like LaTeX."
        }
      }
    },
    "textStyle": {
      "type": "object",
      "description": "Styling properties for text.",
      "properties": {
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold."
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "underline": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "strikethrough": {
          "type": "boolean",
          "description": "Whether the text is struck through."
        },
        "smallCaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps."
        },
        "fontSize": {
          "$ref": "#/definitions/dimension"
        },
        "weightedFontFamily": {
          "type": "object",
          "properties": {
            "fontFamily": {
              "type": "string",
              "description": "The font family, e.g., \"Arial\" or \"Times New Roman\"."
            },
            "weight": {
              "type": "integer",
              "description": "The font weight. This is a numerical value in the range [100, 900], with 400 being normal and 700 being bold."
            }
          }
        },
        "backgroundColor": {
          "$ref": "#/definitions/optionalColor"
        },
        "foregroundColor": {
          "$ref": "#/definitions/optionalColor"
        },
        "link": {
          "type": "object",
          "description": "Represents a hyperlink.",
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL the link points to.",
              "format": "URL"
            }
          }
        },
        "baselineOffset": {
          "type": "string",
          "enum": ["NONE", "SUPERSCRIPT", "SUBSCRIPT"]
        }
      }
    },
    "paragraphStyle": {
      "type": "object",
      "description": "Styling properties for a paragraph.",
      "properties": {
        "namedStyleType": {
          "type": "string",
          "enum": [
            "NORMAL_TEXT",
            "TITLE",
            "SUBTITLE",
            "HEADING_1",
            "HEADING_2",
            "HEADING_3",
            "HEADING_4",
            "HEADING_5",
            "HEADING_6"
          ]
        },
        "alignment": {
          "type": "string",
          "enum": [
            "START",
            "CENTER",
            "END",
            "JUSTIFIED"
          ]
        },
        "direction": {
          "type": "string",
          "enum": [
            "LEFT_TO_RIGHT",
            "RIGHT_TO_LEFT"
          ]
        },
        "lineSpacing": {
          "type": "number",
          "description": "The amount of space between lines, as a multiple of the default line height. Value of 1.0 represents single spacing, 1.15 represents 15% extra space, 2.0 represents double spacing."
        },
        "spaceAbove": {
          "$ref": "#/definitions/dimension"
        },
        "spaceBelow": {
          "$ref": "#/definitions/dimension"
        },
        "borderBetween": {
          "$ref": "#/definitions/paragraphBorder"
        },
        "borderTop": {
          "$ref": "#/definitions/paragraphBorder"
        },
        "borderBottom": {
          "$ref": "#/definitions/paragraphBorder"
        },
        "borderLeft": {
          "$ref": "#/definitions/paragraphBorder"
        },
        "borderRight": {
          "$ref": "#/definitions/paragraphBorder"
        },
        "indentFirstLine": {
          "$ref": "#/definitions/dimension"
        },
        "indentStart": {
          "$ref": "#/definitions/dimension"
        },
        "indentEnd": {
          "$ref": "#/definitions/dimension"
        },
        "spacingMode": {
          "type": "string",
          "enum": [
            "NEVER_COLLAPSE",
            "COLLAPSE_LISTS"
          ]
        },
        "keepLinesTogether": {
          "type": "boolean"
        },
        "keepWithNext": {
          "type": "boolean"
        },
        "avoidWidowAndOrphan": {
          "type": "boolean"
        },
        "shading": {
          "type": "object",
          "properties": {
            "backgroundColor": {
              "$ref": "#/definitions/optionalColor"
            }
          }
        }
      }
    },
    "paragraphBorder": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/optionalColor"
        },
        "width": {
          "$ref": "#/definitions/dimension"
        },
        "padding": {
          "$ref": "#/definitions/dimension"
        },
        "dashStyle": {
          "type": "string",
          "enum": [
            "SOLID",
            "DOT",
            "DASH"
          ]
        }
      }
    },
    "dimension": {
      "type": "object",
      "description": "Represents a dimension, such as a font size or spacing.",
      "properties": {
        "magnitude": {
          "type": "number",
          "description": "The numerical value of the dimension."
        },
        "unit": {
          "type": "string",
          "description": "The unit of the dimension (e.g., PT for points).",
          "enum": ["PT"]
        }
      },
      "required": ["magnitude", "unit"]
    },
    "optionalColor": {
      "type": "object",
      "properties": {
        "color": {
          "type": "object",
          "oneOf": [
            { "$ref": "#/definitions/rgbColor" },
            { "$ref": "#/definitions/themeColor" }
          ]
        }
      }
    },
    "rgbColor": {
      "type": "object",
      "properties": {
        "red": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "green": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "blue": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "themeColor": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DARK1",
            "LIGHT1",
            "DARK2",
            "LIGHT2",
            "ACCENT1",
            "ACCENT2",
            "ACCENT3",
            "ACCENT4",
            "ACCENT5",
            "ACCENT6",
            "LINK"
          ]
        }
      }
    },
    "table": {
      "type": "object",
      "description": "A table element.",
      "properties": {
        "rows": {
          "type": "array",
          "description": "An array of table rows.",
          "items": {
            "$ref": "#/definitions/tableRow"
          }
        },
        "columns": {
          "type": "integer",
          "description": "The number of columns in the table."
        },
        "tableStyle": {
          "type": "object",
          "description": "Styles applied to the entire table.",
          "properties": {
            "tableColumnProperties": {
              "type": "array",
              "description": "Properties for each column in the table.",
              "items": {
                "type": "object",
                "properties": {
                  "width": {
                    "$ref": "#/definitions/dimension"
                  },
                  "widthType": {
                    "type": "string",
                    "enum": ["EVENLY_DISTRIBUTED", "FIXED_WIDTH"]
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "rows",
        "columns"
      ]
    },
    "tableRow": {
      "type": "object",
      "description": "A row in a table.",
      "properties": {
        "cells": {
          "type": "array",
          "description": "An array of table cells in the row.",
          "items": {
            "$ref": "#/definitions/tableCell"
          }
        },
        "tableRowStyle": {
          "type": "object",
          "description": "Styles applied to the table row.",
          "properties": {
            "minRowHeight": {
              "$ref": "#/definitions/dimension"
            }
          }
        }
      },
      "required": [
        "cells"
      ]
    },
    "tableCell": {
      "type": "object",
      "description": "A cell within a table.",
      "properties": {
        "content": {
          "type": "array",
          "description": "Content within the cell (similar to body content).",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/paragraph" },
              { "$ref": "#/definitions/table" },
              { "$ref": "#/definitions/list" }
            ]
          }
        },
        "rowSpan": {
          "type": "integer",
          "description": "Number of rows this cell spans."
        },
        "columnSpan": {
          "type": "integer",
          "description": "Number of columns this cell spans."
        },
        "tableCellStyle": {
          "type": "object",
          "description": "Styles applied to the table cell.",
          "properties": {
            "backgroundColor": {
              "$ref": "#/definitions/optionalColor"
            },
            "borderLeft": {
              "$ref": "#/definitions/tableCellBorder"
            },
            "borderRight": {
              "$ref": "#/definitions/tableCellBorder"
            },
            "borderTop": {
              "$ref": "#/definitions/tableCellBorder"
            },
            "borderBottom": {
              "$ref": "#/definitions/tableCellBorder"
            },
            "paddingLeft": {
              "$ref": "#/definitions/dimension"
            },
            "paddingRight": {
              "$ref": "#/definitions/dimension"
            },
            "paddingTop": {
              "$ref": "#/definitions/dimension"
            },
            "paddingBottom": {
              "$ref": "#/definitions/dimension"
            },
            "contentAlignment": {
              "type": "string",
              "enum": [
                "CONTENT_ALIGNMENT_UNSPECIFIED",
                "TOP",
                "MIDDLE",
                "BOTTOM"
              ]
            }
          }
        }
      },
      "required": [
        "content"
      ]
    },
    "tableCellBorder": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/optionalColor"
        },
        "width": {
          "$ref": "#/definitions/dimension"
        },
        "dashStyle": {
          "type": "string",
          "enum": [
            "SOLID",
            "DOT",
            "DASH"
          ]
        }
      }
    },
    "image": {
      "type": "object",
      "description": "An image element.",
      "properties": {
        "contentUri": {
          "type": "string",
          "description": "URI of the image.",
          "format": "URL"
        },
        "properties": {
          "$ref": "#/definitions/imageProperties"
        }
      },
      "required": [
        "contentUri"
      ]
    },
    "imageProperties": {
      "type": "object",
      "properties": {
        "sourceUri": {
          "type": "string",
          "description": "The source URI of the image. This can differ from the `contentUri` if the image was fetched from a source URI but stored elsewhere.",
          "format": "URL"
        },
        "brightness": {
          "type": "number",
          "description": "The brightness setting for the image, in the range [-1.0, 1.0].",
          "minimum": -1,
          "maximum": 1
        },
        "contrast": {
          "type": "number",
          "description": "The contrast setting for the image, in the range [-1.0, 1.0].",
          "minimum": -1,
          "maximum": 1
        },
        "transparency": {
          "type": "number",
          "description": "The transparency setting for the image, in the range [0.0, 1.0].",
          "minimum": 0,
          "maximum": 1
        },
        "cropProperties": {
          "type": "object",
          "properties": {
            "angle": {
              "type": "number",
              "description": "The clockwise rotation angle of the crop rectangle around its center, in radians."
            },
            "offsetLeft": {
              "type": "number",
              "description": "The offset specifies how far inwards the left edge of the crop rectangle is from the left edge of the original content as a fraction of the original content's width."
            },
            "offsetRight": {
              "type": "number"
            },
            "offsetTop": {
              "type": "number"
            },
            "offsetBottom": {
              "type": "number"
            }
          }
        },
        "imageEffectRecolor": {
          "type": "object",
          "properties": {
            "recolorStops": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "color": {
                    "$ref": "#/definitions/optionalColor"
                  },
                  "alpha": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "horizontalRule": {
      "type": "object",
      "description": "A horizontal rule element."
    },
    "pageBreak": {
      "type": "object",
      "description": "A page break element."
    },
    "embeddedObject": {
      "type": "object",
      "description": "Represents an embedded object in the document, which could be an image, a drawing, or another type of object.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the embedded object."
        },
        "description": {
          "type": "string",
          "description": "The description of the embedded object."
        },
        "embeddedObjectBorder": {
          "type": "object",
          "description": "The border of the embedded object.",
          "$ref": "#/definitions/embeddedObjectBorder"
        },
        "size": {
          "type": "object",
          "description": "The size of the embedded object.",
          "$ref": "#/definitions/size"
        },
        "marginTop": {
          "$ref": "#/definitions/dimension"
        },
        "marginBottom": {
          "$ref": "#/definitions/dimension"
        },
        "marginLeft": {
          "$ref": "#/definitions/dimension"
        },
        "marginRight": {
          "$ref": "#/definitions/dimension"
        },
        "imageProperties": {
          "type": "object",
          "description": "The properties of the image if the embedded object is an image.",
          "$ref": "#/definitions/imageProperties"
        },
        "linkedContentReference": {
          "type": "object",
          "description": "A reference to the external linked content, if the embedded object is linked content.",
          "properties": {
            "spreadsheetId": {
              "type": "string",
              "description": "The ID of the linked spreadsheet, if the linked content is from Google Sheets."
            }
          }
        }
      }
    },
    "embeddedObjectBorder": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/optionalColor"
        },
        "width": {
          "$ref": "#/definitions/dimension"
        },
        "dashStyle": {
          "type": "string",
          "enum": [
            "SOLID",
            "DOT",
            "DASH"
          ]
        },
        "propertyState": {
          "type": "string",
          "enum": [
            "RENDERED",
            "NOT_RENDERED"
          ]
        }
      }
    },
    "size": {
      "type": "object",
      "properties": {
        "height": {
          "$ref": "#/definitions/dimension"
        },
        "width": {
          "$ref": "#/definitions/dimension"
        }
      }
    },
    "namedStyle": {
      "type": "object",
      "properties": {
        "namedStyleType": {
          "type": "string",
          "enum": [
            "NORMAL_TEXT",
            "TITLE",
            "SUBTITLE",
            "HEADING_1",
            "HEADING_2",
            "HEADING_3",
            "HEADING_4",
            "HEADING_5",
            "HEADING_6"
          ]
        },
        "textStyle": {
          "$ref": "#/definitions/textStyle"
        },
        "paragraphStyle": {
          "$ref": "#/definitions/paragraphStyle"
        }
      },
      "required": [
        "namedStyleType"
      ]
    },
    "list": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string"
        },
        "listProperties": {
          "$ref": "#/definitions/listProperties"
        }
      },
      "required": [
        "listId",
        "listProperties"
      ]
    },
    "listProperties": {
      "type": "object",
      "properties": {
        "nestingLevels": {
          "type": "array",
          "maxItems": 9,
          "items": {
            "$ref": "#/definitions/nestingLevel"
          }
        }
      },
      "required": [
        "nestingLevels"
      ]
    },
    "nestingLevel": {
      "type": "object",
      "properties": {
        "glyphType": {
          "type": "string",
          "enum": [
            "DECIMAL",
            "ZERO_DECIMAL",
            "UPPER_ALPHA",
            "ALPHA",
            "UPPER_ROMAN",
            "ROMAN",
            "GLYPH_TYPE_UNSPECIFIED"
          ]
        },
        "glyphFormat": {
          "type": "string"
        },
        "glyphSymbol": {
          "type": "string"
        },
        "startNumber": {
          "type": "integer"
        },
        "indentFirstLine": {
          "$ref": "#/definitions/dimension"
        },
        "indentStart": {
          "$ref": "#/definitions/dimension"
        },
        "textStyle": {
          "$ref": "#/definitions/textStyle"
        }
      }
    },
    "listDefinition": {
      "type": "object",
      "properties": {
        "listProperties": {
          "$ref": "#/definitions/listProperties"
        }
      },
      "required": [
        "listProperties"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Google Search Response",
  "description": "A simplified JSON Schema representation of a Google Search response. This schema focuses on the core elements and common data structures, not covering every single attribute or edge case of the actual Google Search API. It aims to illustrate the structure and type of information returned.",
  "type": "object",
  "properties": {
    "searchMetadata": {
      "type": "object",
      "description": "Metadata about the search query and execution.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the search."
        },
        "status": {
          "type": "string",
          "description": "Status of the search (e.g., 'Success', 'Partial Success')."
        },
        "jsonEndpoint": {
          "type": "string",
          "format": "URL",
          "description": "URL to the full JSON response (if applicable)."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the search was executed."
        },
        "processedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the search was processed."
        },
        "totalTimeTaken": {
          "type": "number",
          "description": "Time taken to process the search, in seconds."
        },
        "engineUrl": {
          "type": "string",
          "format": "URL",
          "description": "URL of the search engine used."
        }
      },
      "required": [
        "id",
        "status",
        "createdAt",
        "processedAt"
      ]
    },
    "searchParameters": {
      "type": "object",
      "description": "Parameters used for the search query.",
      "properties": {
        "q": {
          "type": "string",
          "description": "The search query string."
        },
        "location": {
          "type": "string",
          "description": "Geographic location for the search."
        },
        "hl": {
          "type": "string",
          "description": "Interface language (e.g., 'en', 'es')."
        },
        "gl": {
          "type": "string",
          "description": "Google country domain (e.g., 'us', 'uk')."
        },
        "googleDomain": {
          "type": "string",
          "description": "Google domain used for the search."
        }
      },
      "required": [
        "q"
      ]
    },
    "searchInformation": {
      "type": "object",
      "description": "Information about the search results.",
      "properties": {
        "organicResultsState": {
          "type": "string",
          "description": "The state of the organic results (e.g., 'Results For', 'Showing Results For')."
        },
        "queryDisplayed": {
          "type": "string",
          "description": "The query as displayed by Google, possibly modified."
        },
        "totalResults": {
          "type": "string",
          "description": "Estimated total number of results (formatted string)."
        },
        "timeTaken": {
          "type": "string",
          "description": "Time taken to execute the search, as a string (e.g., '0.54 seconds')."
        },
        "spellingFix": {
          "type": "object",
          "description": "Spelling correction suggested by Google, if any.",
          "properties": {
            "original": {
              "type": "string",
              "description": "The original, potentially misspelled query."
            },
            "corrected": {
              "type": "string",
              "description": "The corrected query."
            }
          }
        }
      }
    },
    "organicResults": {
      "type": "array",
      "description": "List of organic search results.",
      "items": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "description": "Position of the result in the list."
          },
          "title": {
            "type": "string",
            "description": "Title of the result."
          },
          "link": {
            "type": "string",
            "format": "URL",
            "description": "URL of the result."
          },
          "displayedLink": {
            "type": "string",
            "description": "Display version of the link, possibly truncated."
          },
          "snippet": {
            "type": "string",
            "description": "Snippet of text from the result page."
          },
          "aboutThisResult": {
            "type": "object",
            "description": "Information on why this result is included in the search.",
            "properties": {
              "source": {
                "type": "object",
                "description": "Information about the source of the result",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the website."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the source of the result."
                  },
                  "security": {
                    "type": "string",
                    "description": "Whether the website is deemed secure (HTTPS)."
                  },
                  "sourceInfoUrl": {
                    "type": "string",
                    "format": "URL",
                    "description": "A URL containing further information about the source."
                  }
                }
              },
              "keywords": {
                "type": "array",
                "description": "List of keywords matched in the result.",
                "items": {
                  "type": "string"
                }
              },
              "languages": {
                "type": "array",
                "description": "List of languages used on the result page.",
                "items": {
                  "type": "string"
                }
              },
              "regions": {
                "type": "array",
                "description": "List of regions the result page is relevant to.",
                "items": {
                  "type": "string"
                }
              },
              "topics": {
                "type": "array",
                "description": "List of topics related to the result page.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["source"]
          },
          "richSnippet": {
            "type": "object",
            "description": "Structured data associated with the result, if available.",
            "properties": {
              "top": {
                "type": "object",
                "description": "Structured data that shows up at the top of the search result.",
                "properties": {
                  "extensions": {
                    "type": "array",
                    "description": "Extensions or additional data fields for the rich snippet.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "detectedType": {
                    "type": "string",
                    "description": "A description of the type of structured data found."
                  }
                }
              },
              "bottom": {
                "type": "object",
                "description": "Structured data that shows up at the bottom of the search result.",
                "properties": {
                  "extensions": {
                    "type": "array",
                    "description": "Extensions or additional data fields for the rich snippet.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "detectedType": {
                    "type": "string",
                    "description": "A description of the type of structured data found."
                  }
                }
              }
            }
          },
          "date": {
            "type": "string",
            "description": "Date associated with the result, if available."
          },
          "sitelinks": {
            "type": "array",
            "description": "Links to specific sections within the same website.",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title of the sitelink."
                },
                "link": {
                  "type": "string",
                  "format": "URL",
                  "description": "URL of the sitelink."
                },
                "snippet": {
                  "type": "string",
                  "description": "Snippet of text for the sitelink."
                }
              },
              "required": [
                "title",
                "link"
              ]
            }
          }
        },
        "required": [
          "position",
          "title",
          "link"
        ]
      }
    },
    "relatedSearches": {
      "type": "array",
      "description": "List of related search queries.",
      "items": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The related search query."
          },
          "link": {
            "type": "string",
            "format": "URL",
            "description": "Link to the search results for the related query."
          }
        },
        "required": [
          "query"
        ]
      }
    },
    "relatedQuestions": {
      "type": "array",
      "description": "List of related questions",
      "items": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "description": "The related question."
          },
          "answer": {
            "type": "string",
            "description": "A brief answer to the question."
          },
          "source": {
            "type": "object",
            "description": "The source of the answer.",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the source."
              },
              "link": {
                "type": "string",
                "format": "URL",
                "description": "A URL to the source."
              }
            }
          }
        }
      }
    }
  },
  "required": [
    "searchMetadata",
    "searchParameters",
    "searchInformation",
    "organicResults"
  ]
}{
  "type": "object",
  "title": "Substack App Schema",
  "description": "JSON Schema for a simplified representation of the Substack application's data structure.",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of users on the platform.",
      "items": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address."
          },
          "name": {
            "type": "string",
            "description": "User's full name."
          },
          "username": {
            "type": "string",
            "description": "User's chosen username (may be used in publication URLs)."
          },
          "bio": {
            "type": "string",
            "description": "Short biographical information about the user.",
            "maxLength": 500
          },
          "profilePictureUrl": {
            "type": "string",
            "format": "URL",
            "description": "URL to the user's profile picture."
          },
          "publications": {
            "type": "array",
            "description": "List of publications owned by the user.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "ID of a publication owned by this user."
            }
          },
          "subscriptions": {
            "type": "array",
            "description": "List of publications the user is subscribed to.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "ID of a publication the user is subscribed to."
            }
          },
          "paymentInformation": {
            "type": "object",
            "description": "Payment information for paid subscriptions (if applicable).",
            "properties": {
              "paymentMethod": {
                "type": "string",
                "description": "e.g., 'stripe', 'paypal'"
              },
              "last4": {
                "type": "string",
                "description": "Last 4 digits of card"
              },
              "stripeCustomerId": {
                "type": "string",
                "description": "Id of the customer in the payment provider"
              }
            },
            "required": ["paymentMethod"]
          }
        },
        "required": [
          "userId",
          "email",
          "username"
        ]
      }
    },
    "publications": {
      "type": "array",
      "description": "List of publications on the platform.",
      "items": {
        "type": "object",
        "properties": {
          "publicationId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the publication."
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who owns the publication."
          },
          "name": {
            "type": "string",
            "description": "Name of the publication."
          },
          "description": {
            "type": "string",
            "description": "Description of the publication.",
            "maxLength": 1000
          },
          "logoUrl": {
            "type": "string",
            "format": "URL",
            "description": "URL to the publication's logo."
          },
          "bannerImageUrl": {
            "type": "string",
            "format": "URL",
            "description": "URL to a larger banner image for the publication."
          },
          "tags": {
            "type": "array",
            "description": "List of tags associated with the publication.",
            "items": {
              "type": "string"
            }
          },
          "subscriptionPlans": {
            "type": "array",
            "description": "Subscription plans offered by the publication.",
            "items": {
              "type": "object",
              "properties": {
                "planId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the subscription plan."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the plan (e.g., 'Monthly', 'Annual', 'Founding Member')."
                },
                "price": {
                  "type": "number",
                  "format": "float",
                  "description": "Price of the plan in the chosen currency.",
                  "minimum": 0
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the plan (e.g., 'USD', 'EUR').",
                  "pattern": "^[A-Z]{3}$"
                },
                "interval": {
                  "type": "string",
                  "enum": [
                    "month",
                    "year"
                  ],
                  "description": "Billing interval for the plan."
                },
                "benefits": {
                  "type": "array",
                  "description": "List of benefits included in the plan.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "planId",
                "name",
                "price",
                "currency",
                "interval"
              ]
            }
          },
          "posts": {
            "type": "array",
            "description": "List of posts in the publication.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "ID of a post in this publication."
            }
          }
        },
        "required": [
          "publicationId",
          "ownerId",
          "name",
          "description"
        ]
      }
    },
    "posts": {
      "type": "array",
      "description": "List of posts on the platform.",
      "items": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the post."
          },
          "publicationId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the publication the post belongs to."
          },
          "authorId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who authored the post."
          },
          "title": {
            "type": "string",
            "description": "Title of the post."
          },
          "subtitle": {
            "type": "string",
            "description": "Subtitle of the post (optional)."
          },
          "content": {
            "type": "string",
            "description": "Content of the post (can be HTML or Markdown).",
            "maxLength": 200000
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the post was published."
          },
          "isFree": {
            "type": "boolean",
            "description": "Whether the post is free or requires a subscription."
          },
          "coverImageUrl": {
            "type": "string",
            "format": "URL",
            "description": "URL to a cover image for the post."
          },
          "likes": {
            "type": "integer",
            "description": "Number of likes the post has received.",
            "minimum": 0
          },
          "comments": {
            "type": "array",
            "description": "List of comments on the post.",
            "items": {
              "type": "object",
              "properties": {
                "commentId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique ID for the comment."
                },
                "authorId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the user who made the comment."
                },
                "content": {
                  "type": "string",
                  "description": "Content of the comment.",
                  "maxLength": 5000
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time the comment was created."
                },
                "likes": {
                  "type": "integer",
                  "description": "Number of likes the comment has received.",
                  "minimum": 0
                },
                "parentId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Id of the parent comment, it will be null if it is not a reply"
                }
              },
              "required": [
                "commentId",
                "authorId",
                "content",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "postId",
          "publicationId",
          "authorId",
          "title",
          "content",
          "publishedAt",
          "isFree"
        ]
      }
    }
  },
  "required": [
    "users",
    "publications",
    "posts"
  ]
}{
  "type": "object",
  "title": "Wikipedia Article",
  "description": "Schema for a Wikipedia article, focusing on key structural and content elements. This is a simplified representation and does not encompass all the complexities of Wikipedia's internal data model.",
  "properties": {
    "title": {
      "type": "string",
      "description": "The main title of the Wikipedia article.",
      "example": "Artificial Intelligence"
    },
    "id": {
      "type": "integer",
      "description": "Unique identifier for the article (page ID on Wikipedia).",
      "example": 12345
    },
    "revision": {
      "type": "integer",
      "description": "Current revision ID of the article.",
      "example": 987654321
    },
    "language": {
      "type": "string",
      "description": "Language code of the article (e.g., 'en', 'es', 'fr').",
      "example": "en"
    },
    "url": {
      "type": "string",
      "format": "URL",
      "description": "The URL of the article on Wikipedia.",
      "example": "https://en.wikipedia.org/wiki/Artificial_Intelligence"
    },
    "infobox": {
      "type": "object",
      "description": "Structured data typically found in the infobox section.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of infobox (e.g., 'person', 'organization', 'place')."
        },
        "fields": {
          "type": "object",
          "description": "Key-value pairs of data within the infobox.",
          "additionalProperties": {
            "type": ["string", "array"],
            "items": { "type": "string" }
          },
          "example": {
            "born": "1912-06-23",
            "known_for": ["Turing machine", "Turing test"]
          }
        }
      },
      "required": [
        "fields"
      ]
    },
    "sections": {
      "type": "array",
      "description": "Sections of the article's content.",
      "items": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the section.",
            "example": "History"
          },
          "level": {
            "type": "integer",
            "description": "Heading level of the section (1 for top-level, 2 for sub-section, etc.)."
          },
          "content": {
            "type": "string",
            "description": "Text content of the section (may contain wiki markup or basic HTML).",
            "example": "The history of artificial intelligence began in antiquity..."
          },
          "subsections": {
            "type": "array",
            "description": "Nested subsections within this section.",
            "items": {
              "$ref": "#/properties/sections/items"
            }
          }
        },
        "required": [
          "title",
          "level",
          "content"
        ]
      }
    },
    "categories": {
      "type": "array",
      "description": "Categories that the article belongs to.",
      "items": {
        "type": "string",
        "example": "Artificial intelligence"
      }
    },
    "images": {
      "type": "array",
      "description": "List of images used in the article.",
      "items": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Filename of the image.",
            "example": "Alan Turing.jpg"
          },
          "caption": {
            "type": "string",
            "description": "Caption for the image.",
            "example": "Alan Turing in 1945"
          },
          "url": {
            "type": "string",
            "format": "URL",
            "description": "URL to the image file (can be on Wikimedia Commons).",
            "example": "https://upload.wikimedia.org/wikipedia/commons/a/a1/Alan_Turing_Aged_16.jpg"
          }
        },
        "required": [
          "file"
        ]
      }
    },
    "links": {
      "type": "object",
      "description": "Links to other resources.",
      "properties": {
        "internal": {
          "type": "array",
          "description": "Links to other Wikipedia articles (within the same language).",
          "items": {
            "type": "string",
            "example": "Machine learning"
          }
        },
        "external": {
          "type": "array",
          "description": "Links to external websites.",
          "items": {
            "type": "string",
            "format": "URL",
            "example": "https://www.example.com/ai-resource"
          }
        },
        "interlanguage": {
          "type": "array",
          "description": "Links to the same article in other languages.",
          "items": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "description": "Language code of the linked article.",
                "example": "es"
              },
              "title": {
                "type": "string",
                "description": "Title of the article in that language.",
                "example": "Inteligencia artificial"
              },
              "url": {
                "type": "string",
                "format": "URL",
                "description": "The URL of the linked article.",
                "example": "https://es.wikipedia.org/wiki/Inteligencia_artificial"
              }
            },
            "required": [
              "language",
              "title"
            ]
          }
        }
      },
      "required": [
        "internal"
      ]
    },
    "references": {
      "type": "array",
      "description": "List of references/citations used in the article.",
      "items": {
        "type": "object",
        "description": "A reference can be anything from a book, journal article, website, etc.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this reference (often generated by Wikipedia or provided).",
            "example": "cite_note-1"
          },
          "type": {
            "type": "string",
            "description": "Type of reference (e.g., 'book', 'web', 'journal').",
            "example": "web"
          },
          "content": {
            "type": "string",
            "description": "Formatted text of the reference (can contain citation templates or HTML).",
            "example": "{{cite web |url=https://www.example.com |title=Example Website |author=John Doe |date=2023-10-27}}"
          },
          "details": {
            "type": "object",
            "description": "Detailed fields of the reference (if available from parsed citation templates).",
            "properties": {
              "url": {
                "type": "string",
                "format": "URL"
              },
              "title": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "publisher": {
                "type": "string"
              },
              "isbn": {
                "type": "string"
              },
              "doi": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "content"
        ]
      }
    },
    "last_modified": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp of the last modification to the article.",
      "example": "2023-10-27T10:00:00Z"
    }
  },
  "required": [
    "title",
    "id",
    "language",
    "url",
    "sections"
  ]
}