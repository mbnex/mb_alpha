{
  "title": "Apple Messages Schema",
  "description": "A JSON Schema representing the data model of Apple Messages.",
  "type": "object",
  "properties": {
    "conversations": {
      "type": "array",
      "description": "List of conversations",
      "items": {
        "$ref": "#/definitions/conversation"
      }
    },
    "contacts": {
      "type": "array",
      "description": "List of contacts (optional, as Messages may not store a full contact list)",
      "items": {
        "$ref": "#/definitions/contact"
      }
    }
  },
  "definitions": {
    "conversation": {
      "type": "object",
      "description": "A conversation thread",
      "properties": {
        "guid": {
          "type": "string",
          "description": "Unique identifier for the conversation (e.g., a UUID)",
          "format": "uuid"
        },
        "participants": {
          "type": "array",
          "description": "List of participants in the conversation",
          "items": {
            "$ref": "#/definitions/participant"
          },
          "minItems": 1
        },
        "messages": {
          "type": "array",
          "description": "List of messages in the conversation",
          "items": {
            "$ref": "#/definitions/message"
          }
        },
        "isGroupChat": {
          "type": "boolean",
          "description": "Indicates if the conversation is a group chat"
        },
        "service":{
          "type": "string",
          "description": "Service used in this conversation. iMessage, SMS or MMS",
          "enum": ["iMessage", "SMS", "MMS"]
        },
        "lastMessagePreview": {
          "type": "string",
          "description": "Preview of the last message text (optional)",
          "maxLength": 255
        },
        "lastMessageTimestamp": {
          "type": "string",
          "description": "Timestamp of the last message (optional)",
          "format": "date-time"
        },
        "unreadMessageCount": {
          "type": "integer",
          "description": "Number of unread messages in the conversation (optional)",
          "minimum": 0
        }
      },
      "required": [
        "guid",
        "participants",
        "messages",
        "isGroupChat"
      ]
    },
    "participant": {
      "type": "object",
      "description": "A participant in a conversation",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the participant (e.g., phone number, email address)",
          "example": "+15551234567"
        },
        "handle": {
          "type": "string",
          "description": "Display name or handle for the participant (optional)",
          "example": "John Doe"
        },
        "contactId": {
          "type": "string",
          "description": "Reference to a contact (if available, optional)",
          "format": "uuid"
        }
      },
      "required": [
        "id"
      ]
    },
    "message": {
      "type": "object",
      "description": "A message within a conversation",
      "properties": {
        "guid": {
          "type": "string",
          "description": "Unique identifier for the message (e.g., a UUID)",
          "format": "uuid"
        },
        "sender": {
          "$ref": "#/definitions/participant",
          "description": "The sender of the message"
        },
        "date": {
          "type": "string",
          "description": "Timestamp of the message",
          "format": "date-time"
        },
        "text": {
          "type": "string",
          "description": "The text content of the message"
        },
        "attachments": {
          "type": "array",
          "description": "List of attachments (optional)",
          "items": {
            "$ref": "#/definitions/attachment"
          }
        },
        "isRead": {
          "type": "boolean",
          "description": "Indicates if the message has been read"
        },
        "isFromMe": {
          "type": "boolean",
          "description": "Indicates if the message was sent by the current user"
        },
        "subject": {
          "type": "string",
          "description": "The subject line of the message (optional, used in group chats or email-style messages)"
        },
        "messageParts": {
          "type": "array",
          "description": "An array describing parts of the message, e.g., for tapbacks or reactions.",
          "items":{
            "$ref": "#/definitions/messagePart"
          }
        },
        "threadOriginatorGuid": {
          "type": "string",
          "description": "The GUID of the original message when creating a thread in a conversation. Null in any other case.",
          "format": "uuid"
        }
      },
      "required": [
        "guid",
        "sender",
        "date",
        "isFromMe"
      ]
    },
    "attachment": {
      "type": "object",
      "description": "An attachment to a message",
      "properties": {
        "guid": {
          "type": "string",
          "description": "Unique identifier for the attachment (e.g., a UUID)",
          "format": "uuid"
        },
        "filename": {
          "type": "string",
          "description": "Name of the file"
        },
        "contentType": {
          "type": "string",
          "description": "MIME type of the attachment",
          "example": "image/jpeg"
        },
        "fileSize": {
          "type": "integer",
          "description": "Size of the attachment in bytes"
        },
        "transferState": {
          "type": "string",
          "enum": ["not started", "started", "paused", "finished", "error"],
          "description": "The transfer state of the attachment."
        },
        "uti": {
          "type": "string",
          "description": "Uniform Type Identifier representing the type of file of this attachment."
        },
        "transferName": {
          "type": "string",
          "description": "The name of the file to be transferred or being transferred."
        },
        "isSticker": {
          "type": "boolean",
          "description": "Boolean value indicating whether the attachment is a sticker."
        },
        "isOutgoing": {
          "type": "boolean",
          "description": "Boolean value indicating whether the attachment is outgoing."
        },
        "hideAttachment": {
          "type": "boolean",
          "description": "Boolean value indicating whether to hide the attachment. For example, when the attachment is an audio message."
        },
        "originalGuid": {
          "type": "string",
          "description": "The original guid for this attachment. For example, when the attachment is a tapback or a reaction."
        },
        "localUrl":{
          "type": "string",
          "description": "Local path where the attachment is saved",
          "format": "uri"
        },
        "cloudUrl":{
          "type": "string",
          "description": "iCloud url where the attachment is saved (if available)",
          "format": "uri"
        }
      },
      "required": [
        "guid",
        "filename",
        "contentType"
      ]
    },
    "contact": {
      "type": "object",
      "description": "A contact",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact (e.g., a UUID)",
          "format": "uuid"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the contact"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the contact"
        },
        "nickname": {
          "type": "string",
          "description": "Nickname of the contact"
        },
        "phoneNumbers": {
          "type": "array",
          "description": "List of phone numbers associated with the contact",
          "items": {
            "type": "string",
            "example": "+15551234567"
          }
        },
        "emailAddresses": {
          "type": "array",
          "description": "List of email addresses associated with the contact",
          "items": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "messagePart":{
      "type": "object",
      "description": "A message part or summary item in a message. Used for tapbacks or reactions.",
      "properties": {
        "partIndex": {
          "type": "integer",
          "description": "The index of this part in the message parts array."
        },
        "summaryType":{
          "type": "integer",
          "description": "Integer value that identifies the type of reaction or tapback. See Message Summary Types."
        },
        "sender": {
          "$ref": "#/definitions/participant",
          "description": "The sender of the tapback or reaction"
        }
      },
      "required": [
        "partIndex"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Element/Matrix App",
  "description": "JSON Schema for the core features and data structures of the Element/Matrix application.",
  "type": "object",
  "properties": {
    "user": {
      "type": "object",
      "description": "Represents a user in the Matrix ecosystem.",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The unique Matrix user ID (MXID).",
          "pattern": "^@[^:]+:[^:]+$",
          "example": "@alice:example.com"
        },
        "display_name": {
          "type": "string",
          "description": "The user's display name (may not be unique)."
        },
        "avatar_url": {
          "type": "string",
          "format": "URL",
          "description": "The URL of the user's avatar image."
        },
        "devices": {
          "type": "array",
          "description": "A list of the user's devices.",
          "items": {
            "type": "object",
            "properties": {
              "device_id": {
                "type": "string",
                "description": "Unique identifier for the device"
              },
              "display_name": {
                "type": "string",
                "description": "Human-readable name for the device"
              }
            },
            "required": [
              "device_id"
            ]
          }
        }
      },
      "required": [
        "user_id"
      ]
    },
    "room": {
      "type": "object",
      "description": "Represents a chat room in Matrix.",
      "properties": {
        "room_id": {
          "type": "string",
          "description": "The unique Matrix room ID.",
          "pattern": "^![^:]+:[^:]+$",
          "example": "!abcdefg:example.com"
        },
        "name": {
          "type": "string",
          "description": "The human-readable name of the room (may not be unique)."
        },
        "topic": {
          "type": "string",
          "description": "The room's topic or description."
        },
        "avatar_url": {
          "type": "string",
          "format": "URL",
          "description": "The URL of the room's avatar image."
        },
        "is_direct": {
          "type": "boolean",
          "description": "Indicates whether the room is a direct (1:1) chat."
        },
        "members": {
          "type": "array",
          "description": "List of user IDs that are members of the room.",
          "items": {
            "$ref": "#/properties/user/properties/user_id"
          }
        },
        "power_levels": {
          "type": "object",
          "description": "Defines user power levels within the room.",
          "properties": {
            "users": {
              "type": "object",
              "description": "Mapping of user IDs to their power levels.",
              "additionalProperties": {
                "type": "integer",
                "minimum": 0
              }
            },
            "events": {
              "type": "object",
              "description": "Default power level required to send specific event types.",
              "additionalProperties": {
                "type": "integer",
                "minimum": 0
              }
            },
            "state_default": {
              "type": "integer",
              "minimum": 0,
              "description": "Default power level to send state events"
            },
            "events_default": {
              "type": "integer",
              "minimum": 0,
              "description": "Default power level to send message events"
            },
            "users_default": {
              "type": "integer",
              "minimum": 0,
              "description": "Default power level for users joining the room"
            },
            "invite": {
              "type": "integer",
              "minimum": 0,
              "description": "Power level required to invite users"
            },
            "kick": {
              "type": "integer",
              "minimum": 0,
              "description": "Power level required to kick users"
            },
            "ban": {
              "type": "integer",
              "minimum": 0,
              "description": "Power level required to ban users"
            },
            "redact": {
              "type": "integer",
              "minimum": 0,
              "description": "Power level required to redact events"
            }
          }
        }
      },
      "required": [
        "room_id"
      ]
    },
    "event": {
      "type": "object",
      "description": "Represents an event (message, state change, etc.) in a Matrix room.",
      "properties": {
        "event_id": {
          "type": "string",
          "description": "The unique ID of the event."
        },
        "sender": {
          "$ref": "#/properties/user/properties/user_id",
          "description": "The user ID of the event sender."
        },
        "origin_server_ts": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp (milliseconds since epoch) when the event was sent by the origin server."
        },
        "room_id": {
          "$ref": "#/properties/room/properties/room_id",
          "description": "The room ID where the event occurred."
        },
        "type": {
          "type": "string",
          "description": "The event type (e.g., m.room.message, m.room.name, etc.).",
          "enum": [
            "m.room.message",
            "m.room.name",
            "m.room.topic",
            "m.room.member",
            "m.room.create",
            "m.room.join_rules",
            "m.room.power_levels",
            "m.room.redaction",
            "m.room.avatar",
            "m.room.encryption",
            "m.room.canonical_alias",
            "m.sticker",
            "m.reaction"
          ]
        },
        "content": {
          "type": "object",
          "description": "The event content, which varies depending on the event type."
        },
        "unsigned": {
          "type": "object",
          "description": "Unsigned data relating to the event such as age"
        },
        "redacts": {
          "type": "string",
          "description": "For redaction events, the ID of the event being redacted"
        },
        "state_key": {
          "type": "string",
          "description": "State key, if this is a state event."
        }
      },
      "required": [
        "event_id",
        "sender",
        "origin_server_ts",
        "room_id",
        "type",
        "content"
      ],
      "oneOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "m.room.message"
              }
            }
          },
          "then": {
            "properties": {
              "content": {
                "type": "object",
                "properties": {
                  "msgtype": {
                    "type": "string",
                    "description": "The message type (e.g., m.text, m.image, m.file, etc.).",
                    "enum": [
                      "m.text",
                      "m.emote",
                      "m.notice",
                      "m.image",
                      "m.file",
                      "m.audio",
                      "m.location",
                      "m.video"
                    ]
                  },
                  "body": {
                    "type": "string",
                    "description": "The body of the message (text content)."
                  },
                  "url": {
                    "type": "string",
                    "format": "URL",
                    "description": "URL of the media (for image, file, audio, video types)."
                  },
                  "info": {
                    "type": "object",
                    "description": "Additional information about the media (size, mimetype, etc.)."
                  }
                },
                "required": [
                  "msgtype",
                  "body"
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "m.room.member"
              }
            }
          },
          "then": {
            "properties": {
              "content": {
                "type": "object",
                "properties": {
                  "membership": {
                    "type": "string",
                    "enum": [
                      "invite",
                      "join",
                      "leave",
                      "ban",
                      "knock"
                    ],
                    "description": "The membership state of the user."
                  },
                  "displayname": {
                    "type": "string",
                    "description": "The user's display name at the time of the event."
                  },
                  "avatar_url": {
                    "type": "string",
                    "format": "URL",
                    "description": "The user's avatar URL at the time of the event."
                  }
                },
                "required": [
                  "membership"
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "enum": [
                  "m.room.name",
                  "m.room.topic",
                  "m.room.avatar",
                  "m.room.create",
                  "m.room.join_rules",
                  "m.room.power_levels",
                  "m.room.encryption",
                  "m.room.canonical_alias"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "state_key": {
                "type": "string",
                "description": "A unique key to identify the state. Often empty for m.room.create",
                "maxLength": 255
              }
            },
            "required": [
              "state_key"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "m.reaction"
              }
            }
          },
          "then": {
            "properties": {
              "content": {
                "type": "object",
                "properties": {
                  "m.relates_to": {
                    "type": "object",
                    "properties": {
                      "rel_type": {
                        "type": "string",
                        "const": "m.annotation"
                      },
                      "event_id": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string",
                        "description": "The reaction (e.g. an emoji)"
                      }
                    },
                    "required": [
                      "rel_type",
                      "event_id",
                      "key"
                    ]
                  }
                },
                "required": [
                  "m.relates_to"
                ]
              }
            },
            "required": [
              "content"
            ]
          }
        }
      ]
    },
    "space": {
      "type": "object",
      "description": "Represents a space, which is a hierarchical collection of rooms and subspaces.",
      "properties": {
        "room_id": {
          "$ref": "#/properties/room/properties/room_id",
          "description": "The room ID that represents the space."
        },
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "children": {
          "type": "array",
          "description": "List of room IDs and space IDs that are children of this space.",
          "items": {
            "type": "string",
            "description": "Room ID or space ID",
            "pattern": "^[#|!][^:]+:[^:]+$"
          }
        }
      },
      "required": [
        "room_id"
      ]
    }
  },
  "required": []
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Facebook Messenger Schema",
  "description": "A JSON Schema representing the core data structures of Facebook Messenger.",
  "type": "object",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of users within the Messenger ecosystem.",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "conversations": {
      "type": "array",
      "description": "List of conversations (threads).",
      "items": {
        "$ref": "#/definitions/conversation"
      }
    },
    "messages": {
      "type": "array",
      "description": "List of all messages.",
      "items": {
        "$ref": "#/definitions/message"
      }
    },
    "groups": {
      "type": "array",
      "description": "List of group conversations.",
      "items": {
        "$ref": "#/definitions/group"
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the user."
        },
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "profile_picture": {
          "type": "string",
          "format": "URL",
          "description": "URL to the user's profile picture."
        },
        "is_online": {
          "type": "boolean",
          "description": "Indicates if the user is currently online."
        }
      },
      "required": [
        "id",
        "first_name",
        "last_name"
      ]
    },
    "conversation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the conversation."
        },
        "participants": {
          "type": "array",
          "description": "List of user IDs participating in the conversation.",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "minItems": 2
        },
        "last_message": {
          "$ref": "#/definitions/message",
          "description": "The most recent message in the conversation."
        },
        "unread_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of unread messages in the conversation."
        }
      },
      "required": [
        "id",
        "participants"
      ]
    },
    "message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the message."
        },
        "conversation_id": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the conversation this message belongs to."
        },
        "sender_id": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user who sent the message."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the message was sent."
        },
        "content": {
          "type": "object",
          "description": "Content of the message.",
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["text"]
                },
                "text": {
                  "type": "string",
                  "description": "Text content of the message."
                }
              },
              "required": [
                "type",
                "text"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["image"]
                },
                "url": {
                  "type": "string",
                  "format": "URL",
                  "description": "URL to the image."
                }
              },
              "required": [
                "type",
                "url"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["video"]
                },
                "url": {
                  "type": "string",
                  "format": "URL",
                  "description": "URL to the video."
                }
              },
              "required": [
                "type",
                "url"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["audio"]
                },
                "url": {
                  "type": "string",
                  "format": "URL",
                  "description": "URL to the audio file."
                }
              },
              "required": [
                "type",
                "url"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["file"]
                },
                "url": {
                  "type": "string",
                  "format": "URL",
                  "description": "URL to the file."
                },
                "filename": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "url",
                "filename"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["sticker"]
                },
                "sticker_id": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "sticker_id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["reaction"]
                },
                "emoji": {
                  "type": "string",
                  "description": "Unicode emoji representing the reaction."
                },
                "target_message_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID of the message being reacted to"
                },
                "user_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID of the user who reacted"
                }
              },
              "required": [
                "type",
                "emoji",
                "target_message_id",
                "user_id"
              ]
            }
          ]
        },
        "is_read": {
          "type": "boolean",
          "description": "Indicates if the message has been read."
        }
      },
      "required": [
        "id",
        "conversation_id",
        "sender_id",
        "timestamp",
        "content"
      ]
    },
    "group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the group."
        },
        "name": {
          "type": "string",
          "description": "Name of the group."
        },
        "members": {
          "type": "array",
          "description": "List of user IDs who are members of the group.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "admins": {
          "type": "array",
          "description": "List of user IDs who are admins of the group.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "group_conversation": {
          "$ref": "#/definitions/conversation",
          "description": "The corresponding conversation object for this group."
        }
      },
      "required": [
        "id",
        "members",
        "group_conversation"
      ]
    }
  }
}{
  "type": "object",
  "title": "FaceTime App Schema",
  "description": "JSON Schema representing the core data structures and functionality of a FaceTime-like application.",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of registered users.",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "calls": {
      "type": "array",
      "description": "List of active and past calls.",
      "items": {
        "$ref": "#/definitions/Call"
      }
    },
    "contacts": {
      "type": "array",
      "description": "List of user contacts, potentially pulled from device contacts.",
      "items": {
        "$ref": "#/definitions/Contact"
      }
    },
    "settings": {
      "type": "object",
      "description": "User-specific settings.",
      "properties": {
        "notifications": {
          "type": "boolean",
          "description": "Enable or disable call notifications.",
          "default": true
        },
        "dataUsage": {
          "type": "string",
          "enum": [
            "auto",
            "low",
            "high"
          ],
          "description": "Data usage settings for calls.",
          "default": "auto"
        },
        "blockedContacts": {
          "type": "array",
          "description": "List of blocked contact identifiers.",
          "items": {
            "type": "string"
          }
        },
        "defaultCamera": {
          "type": "string",
          "enum": ["front", "rear"],
          "description": "Default camera to use when starting a call",
          "default": "front"
        },
        "defaultMic": {
          "type": "boolean",
          "description": "Default state for microphone (enabled/disabled) at start of call.",
          "default": true
        }
      },
      "additionalProperties": false
    }
  },
  "required": [
    "users",
    "calls",
    "contacts"
  ],
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the user."
        },
        "phoneNumber": {
          "type": "string",
          "format": "e164",
          "description": "User's phone number (E.164 format)."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "firstName": {
          "type": "string",
          "description": "User's first name."
        },
        "lastName": {
          "type": "string",
          "description": "User's last name."
        },
        "profilePictureUrl": {
          "type": "string",
          "format": "URL",
          "description": "URL to the user's profile picture."
        },
        "status": {
          "type": "string",
          "enum": [
            "available",
            "away",
            "busy",
            "offline"
          ],
          "description": "Current availability status of the user.",
          "default": "offline"
        }
      },
      "required": [
        "userId",
        "phoneNumber"
      ]
    },
    "Call": {
      "type": "object",
      "properties": {
        "callId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the call."
        },
        "participants": {
          "type": "array",
          "description": "List of participants in the call.",
          "items": {
            "$ref": "#/definitions/Participant"
          },
          "minItems": 2
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the call started."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the call ended."
        },
        "status": {
          "type": "string",
          "enum": [
            "ringing",
            "inProgress",
            "ended",
            "missed",
            "declined",
            "failed"
          ],
          "description": "Current status of the call."
        },
        "callType": {
          "type": "string",
          "enum": [
            "audio",
            "video"
          ],
          "description": "Type of the call."
        }
      },
      "required": [
        "callId",
        "participants",
        "startTime",
        "status",
        "callType"
      ]
    },
    "Participant": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "Identifier of the user participating in the call."
        },
        "status": {
          "type": "string",
          "enum": [
            "invited",
            "joined",
            "left",
            "declined"
          ],
          "description": "Status of the participant in the call."
        },
        "joinedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when participant joined the call."
        },
        "leftAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when participant left the call."
        }
      },
      "required": [
        "userId",
        "status"
      ]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string",
          "description": "Unique identifier for the contact (can be from device contacts)."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the contact."
        },
        "phoneNumber": {
          "type": "string",
          "format": "e164",
          "description": "Contact's phone number (E.164 format)."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Contact's email address"
        },
        "isFaceTimeUser": {
          "type": "boolean",
          "description": "Indicates whether this contact is also a registered FaceTime user."
        },
        "profilePictureUrl": {
          "type": "string",
          "format": "url",
          "description": "URL to the contact's profile picture (if available)."
        }
      },
      "required": [
        "contactId",
        "displayName",
        "phoneNumber"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "IRC Message",
  "description": "JSON Schema for an IRC message.",
  "type": "object",
  "properties": {
    "tags": {
      "type": "object",
      "description": "Optional IRCv3 message tags.",
      "additionalProperties": {
        "type": "string"
      },
      "example": {
        "time": "2023-10-27T10:30:00Z",
        "account": "jdoe"
      }
    },
    "source": {
      "type": "object",
      "description": "The source of the message.",
      "properties": {
        "nick": {
          "type": "string",
          "description": "Nickname of the sender.",
          "example": "jdoe"
        },
        "user": {
          "type": "string",
          "description": "Username of the sender.",
          "example": "jdoe"
        },
        "host": {
          "type": "string",
          "description": "Hostname of the sender.",
          "example": "user.example.com"
        },
        "server": {
          "type": "string",
          "description": "Server name, if the source is a server.",
          "example": "irc.example.com"
        }
      },
      "oneOf": [
        {
          "required": ["nick", "user", "host"]
        },
        {
          "required": ["server"]
        }
      ],
      "example": {
        "nick": "jdoe",
        "user": "~jdoe",
        "host": "user.example.com"
      }
    },
    "command": {
      "type": "string",
      "description": "The IRC command.",
      "enum": [
        "ADMIN", "AWAY", "CONNECT", "DIE", "ERROR", "INFO", "INVITE", "ISON",
        "JOIN", "KICK", "KILL", "LINKS", "LIST", "LUSERS", "MODE", "MOTD",
        "NAMES", "NICK", "NOTICE", "OPER", "PART", "PASS", "PING", "PONG",
        "PRIVMSG", "QUIT", "REHASH", "RESTART", "SERVICE", "SERVLIST",
        "SQUERY", "SQUIT", "STATS", "SUMMON", "TIME", "TOPIC", "TRACE",
        "USER", "USERHOST", "USERS", "VERSION", "WALLOPS", "WHO", "WHOIS",
        "WHOWAS", "001", "002", "003", "004", "005", "251", "252", "253",
        "254", "255", "256", "257", "258", "259", "261", "262", "263", "265",
        "266", "250", "301", "302", "303", "305", "306", "311", "312", "313",
        "314", "315", "317", "318", "319", "321", "322", "323", "324", "325",
        "329", "330", "331", "332", "333", "341", "342", "346", "347", "348",
        "349", "351", "352", "353", "364", "365", "366", "367", "368", "369",
        "371", "372", "374", "375", "376", "381", "382", "383", "384", "391",
        "392", "393", "394", "395", "401", "402", "403", "404", "405", "406",
        "407", "408", "409", "411", "412", "413", "414", "415", "421", "422",
        "423", "424", "431", "432", "433", "436", "437", "441", "442", "443",
        "444", "445", "446", "451", "461", "462", "463", "464", "465", "466",
        "467", "471", "472", "473", "474", "475", "476", "477", "478", "481",
        "482", "483", "484", "485", "491", "501", "502"
      ],
      "example": "PRIVMSG"
    },
    "parameters": {
      "type": "array",
      "description": "Parameters for the command.",
      "items": {
        "type": "string"
      },
      "example": [
        "#channel",
        "Hello, world!"
      ]
    }
  },
  "required": [
    "command"
  ]
}{
  "type": "object",
  "title": "Jitsi Meet Application Schema",
  "description": "Schema for a Jitsi Meet application configuration, including user interface, meeting features, and integration details.",
  "properties": {
    "general": {
      "type": "object",
      "description": "General application settings.",
      "properties": {
        "appName": {
          "type": "string",
          "description": "Name of the Jitsi Meet application.",
          "example": "My Jitsi App"
        },
        "defaultLanguage": {
          "type": "string",
          "description": "Default language for the application interface.",
          "example": "en",
          "pattern": "^[a-z]{2}(-[A-Z]{2})?$"
        },
        "domain": {
          "type": "string",
          "description": "Domain name where the Jitsi server is hosted.",
          "example": "meet.example.com",
          "format": "hostname"
        },
        "logoURL": {
          "type": "string",
          "description": "URL to the application logo.",
          "format": "URL"
        },
        "faviconURL": {
          "type": "string",
          "description": "URL to the application favicon.",
          "format": "URL"
        },
        "supportEmail": {
          "type": "string",
          "description": "Email address for support inquiries",
          "format": "email"
        }
      }
    },
    "interfaceConfig": {
      "type": "object",
      "description": "Configuration for the user interface.",
      "properties": {
        "TOOLBAR_BUTTONS": {
          "type": "array",
          "description": "List of toolbar buttons to display.",
          "items": {
            "type": "string",
            "enum": [
              "microphone",
              "camera",
              "closedcaptions",
              "desktop",
              "fullscreen",
              "fodeviceselection",
              "hangup",
              "profile",
              "chat",
              "recording",
              "livestreaming",
              "etherpad",
              "sharedvideo",
              "settings",
              "raisehand",
              "videoquality",
              "filmstrip",
              "invite",
              "feedback",
              "stats",
              "shortcuts",
              "tileview",
              "videobackgroundblur",
              "download",
              "help",
              "mute-everyone",
              "security"
            ]
          }
        },
        "SHOW_WATERMARK": {
          "type": "boolean",
          "description": "Whether to display the Jitsi watermark.",
          "default": false
        },
        "SHOW_JITSI_WATERMARK": {
          "type": "boolean",
          "description": "Whether to display Jitsi branded watermark",
          "default": false
        },
        "SHOW_BRAND_WATERMARK": {
          "type": "boolean",
          "description": "Whether to display custom brand watermark",
          "default": false
        },
        "BRAND_WATERMARK_LINK": {
          "type": "string",
          "description": "URL to which the custom brand watermark will point",
          "format": "URL"
        },
        "DEFAULT_LOCAL_DISPLAY_NAME": {
          "type": "string",
          "description": "Default display name for local participants",
          "example": "Me"
        },
        "DEFAULT_REMOTE_DISPLAY_NAME": {
          "type": "string",
          "description": "Default display name for remote participants",
          "example": "Fellow Jitster"
        },
        "disableDeepLinking": {
          "type": "boolean",
          "description": "Disable deep linking to specific rooms",
          "default": false
        },
        "disableAudioLevels": {
          "type": "boolean",
          "description": "Disable visual audio level indicators",
          "default": false
        },
        "disableRemoteMute": {
          "type": "boolean",
          "description": "Disable the option to remotely mute participants",
          "default": false
        },
        "hideConferenceSubject": {
          "type": "boolean",
          "description": "Whether to hide the subject/topic field.",
          "default": false
        },
        "hideConferenceTimer": {
          "type": "boolean",
          "description": "Whether to hide the meeting timer",
          "default": false
        },
        "OPTIMAL_BROWSERS": {
          "type": "array",
          "description": "List of browsers that are recommended",
          "default": ["chrome", "chromium", "firefox", "nwjs", "electron", "safari"],
          "items": {
            "type": "string",
            "enum": ["chrome", "chromium", "firefox", "nwjs", "electron", "safari", "edge"]
          }
        },
        "UNSUPPORTED_BROWSERS": {
          "type": "array",
          "description": "List of browsers that are not supported",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "configOverwrite": {
      "type": "object",
      "description": "Configuration options that overwrite Jitsi Meet's default settings.",
      "properties": {
        "prejoinPageEnabled": {
          "type": "boolean",
          "description": "Enables or disables the pre-join page.",
          "default": false
        },
        "disableAP": {
          "type": "boolean",
          "description": "Disable Acoustic Echo Cancellation (AEC)",
          "default": false
        },
        "disableAEC": {
          "type": "boolean",
          "description": "Disable Automatic Echo Cancellation",
          "default": false
        },
        "disableNS": {
          "type": "boolean",
          "description": "Disable Noise Suppression",
          "default": false
        },
        "disableAGC": {
          "type": "boolean",
          "description": "Disable Automatic Gain Control",
          "default": false
        },
        "disableHPF": {
          "type": "boolean",
          "description": "Disable High Pass Filter",
          "default": false
        },
        "stereo": {
          "type": "boolean",
          "description": "Enable stereo audio",
          "default": false
        },
        "enableNoAudioDetection": {
          "type": "boolean",
          "description": "Enables No Audio Detection",
          "default": true
        },
        "enableNoisyMicDetection": {
          "type": "boolean",
          "description": "Enables Noisy Mic Detection",
          "default": true
        },
        "startAudioOnly": {
          "type": "boolean",
          "description": "Start the meeting with audio only.",
          "default": false
        },
        "startWithAudioMuted": {
          "type": "boolean",
          "description": "Start the meeting with audio muted.",
          "default": false
        },
        "startWithVideoMuted": {
          "type": "boolean",
          "description": "Start the meeting with video muted.",
          "default": false
        },
        "enableClosePage": {
          "type": "boolean",
          "description": "Enable a close page at the end of the meeting.",
          "default": false
        },
        "disableInviteFunctions": {
          "type": "boolean",
          "description": "Disable invitation functionalities",
          "default": false
        },
        "disableJoinLeaveSounds": {
          "type": "boolean",
          "description": "Disable playing sounds on user join/leave.",
          "default": false
        },
        "disableThirdPartyRequests": {
          "type": "boolean",
          "description": "Disable making requests to third-party servers",
          "default": false
        },
        "enableInsecureRoomNameWarning": {
          "type": "boolean",
          "description": "Enable warning for insecure room names",
          "default": false
        },
        "resolution": {
          "type": "integer",
          "description": "Default video resolution (height in pixels).",
          "default": 720,
          "enum": [180, 240, 360, 480, 720, 1080, 1440, 2160]
        },
        "constraints": {
          "type": "object",
          "description": "Video resolution constraints for different scenarios",
          "properties": {
            "video": {
              "type": "object",
              "properties": {
                "ideal": {
                  "type": "integer",
                  "description": "Ideal resolution",
                  "default": 720,
                  "enum": [180, 240, 360, 480, 720, 1080, 1440, 2160]
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum resolution",
                  "default": 720,
                  "enum": [180, 240, 360, 480, 720, 1080, 1440, 2160]
                },
                "min": {
                  "type": "integer",
                  "description": "Minimum resolution",
                  "default": 180,
                  "enum": [180, 240, 360, 480, 720, 1080, 1440, 2160]
                }
              }
            }
          }
        },
        "disableSimulcast": {
          "type": "boolean",
          "description": "Disable simulcast to reduce bandwidth consumption",
          "default": false
        },
        "disableRtx": {
          "type": "boolean",
          "description": "Disable the RTX (retransmission) feature in video",
          "default": false
        },
        "enableOpusRed": {
          "type": "boolean",
          "description": "Enable RED (redundant encoding) for Opus audio codec",
          "default": false
        },
        "p2p": {
          "type": "object",
          "description": "Peer-to-peer connection settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable peer-to-peer connections",
              "default": true
            }
          }
        },
        "analytics": {
          "type": "object",
          "description": "Settings for usage analytics.",
          "properties": {
            "disabled": {
              "type": "boolean",
              "description": "Disable analytics globally",
              "default": false
            }
          }
        },
        "hosts": {
          "type": "object",
          "description": "Domain settings for moderators and authentication.",
          "properties": {
            "domain": {
              "type": "string",
              "description": "Domain for authentication and room management.",
              "example": "auth.example.com"
            },
            "muc": {
              "type": "string",
              "description": "Multi-User Chat (MUC) domain.",
              "example": "conference.example.com"
            }
          }
        },
        "externalConnectUrl": {
          "type": "string",
          "description": "URL for external authentication or user management services.",
          "format": "URL"
        },
        "recordingService": {
          "type": "object",
          "description": "Configuration for recording service integration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable integration with recording service",
              "default": false
            }
          }
        },
        "liveStreamingEnabled": {
          "type": "boolean",
          "description": "Whether to enable live streaming.",
          "default": false
        },
        "fileRecordingsEnabled": {
          "type": "boolean",
          "description": "Whether to enable file-based recordings.",
          "default": false
        },
        "fileRecordingsServiceEnabled": {
          "type": "boolean",
          "description": "Whether to enable the file-based recording service",
          "default": false
        },
        "hiddenDomain": {
          "type": "string",
          "description": "A hidden domain used for specific purposes like shared document editing.",
          "example": "shared-doc.example.com"
        }
      }
    },
    "integration": {
      "type": "object",
      "description": "Configuration for integrations with other services.",
      "properties": {
        "calendar": {
          "type": "object",
          "description": "Settings for calendar integration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable calendar integration",
              "default": false
            }
          }
        },
        "etherpad": {
          "type": "object",
          "description": "Settings for Etherpad integration (collaborative document editing)",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Etherpad integration",
              "default": false
            },
            "baseUrl": {
              "type": "string",
              "description": "Base URL of the Etherpad instance",
              "format": "URL"
            }
          }
        }
      }
    }
  },
  "required": [
    "general"
  ]
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Microsoft Teams",
  "description": "JSON Schema for a simplified representation of Microsoft Teams data structure.",
  "type": "object",
  "properties": {
    "teams": {
      "type": "array",
      "description": "List of Teams",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Team",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the Team"
          },
          "description": {
            "type": "string",
            "description": "Description of the Team"
          },
          "isArchived": {
            "type": "boolean",
            "description": "Indicates if the Team is archived"
          },
          "members": {
            "type": "array",
            "description": "List of Team members",
            "items": {
              "$ref": "#/definitions/user"
            }
          },
          "owners": {
            "type": "array",
            "description": "List of Team owners",
            "items": {
              "$ref": "#/definitions/user"
            }
          },
          "channels": {
            "type": "array",
            "description": "List of channels within the Team",
            "items": {
              "$ref": "#/definitions/channel"
            }
          },
          "apps": {
            "type": "array",
            "description": "List of installed apps in the team",
            "items": {
              "$ref": "#/definitions/app"
            }
          },
          "settings": {
            "type": "object",
            "description": "Team-specific settings",
            "properties": {
              "guestSettings": {
                "$ref": "#/definitions/guestSettings"
              },
              "messagingSettings": {
                "$ref": "#/definitions/messagingSettings"
              },
              "funSettings": {
                "$ref": "#/definitions/funSettings"
              }
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    },
    "users": {
      "type": "array",
      "description": "List of Users (can represent members across multiple teams)",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "apps": {
      "type": "array",
      "description": "List of apps that can be installed in teams or used in chats",
      "items": {
        "$ref": "#/definitions/app"
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user",
          "format": "uuid"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "User Principal Name (UPN) - typically the user's email address",
          "format": "email"
        },
        "jobTitle": {
          "type": "string",
          "description": "Job title of the user"
        },
        "department": {
          "type": "string",
          "description": "Department of the user"
        }
      },
      "required": [
        "id",
        "displayName",
        "userPrincipalName"
      ]
    },
    "channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the channel",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Name of the channel"
        },
        "description": {
          "type": "string",
          "description": "Description of the channel"
        },
        "isFavorite": {
          "type": "boolean",
          "description": "Indicates if the channel is marked as a favorite by the current user"
        },
        "email": {
          "type": "string",
          "description": "Email address associated with the channel",
          "format": "email"
        },
        "webUrl": {
          "type": "string",
          "description": "URL to access the channel in the web client",
          "format": "URL"
        },
        "membershipType": {
          "type": "string",
          "description": "Type of channel membership (e.g., 'standard', 'private', 'shared')",
          "enum": ["standard", "private", "shared"]
        },
        "messages": {
          "type": "array",
          "description": "List of messages in the channel",
          "items": {
            "$ref": "#/definitions/message"
          }
        },
        "tabs": {
          "type": "array",
          "description": "List of tabs configured in the channel",
          "items": {
            "$ref": "#/definitions/tab"
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the message",
          "format": "uuid"
        },
        "replyToId": {
          "type": "string",
          "description": "ID of the message this message is a reply to (if applicable)",
          "format": "uuid"
        },
        "from": {
          "type": "object",
          "description": "Sender of the message",
          "properties": {
            "user": {
              "$ref": "#/definitions/user"
            },
            "application": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "body": {
          "type": "object",
          "description": "Content of the message",
          "properties": {
            "contentType": {
              "type": "string",
              "description": "Type of message content (e.g., 'text', 'html')",
              "enum": ["text", "html"]
            },
            "content": {
              "type": "string",
              "description": "The actual message content"
            }
          },
          "required": [
            "contentType",
            "content"
          ]
        },
        "createdDateTime": {
          "type": "string",
          "description": "Timestamp when the message was created",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Timestamp when the message was last modified",
          "format": "date-time"
        },
        "attachments": {
          "type": "array",
          "description": "List of attachments in the message",
          "items": {
            "$ref": "#/definitions/attachment"
          }
        },
        "mentions": {
          "type": "array",
          "description": "List of mentions in the message",
          "items": {
            "$ref": "#/definitions/mention"
          }
        },
        "reactions": {
          "type": "array",
          "description": "List of reactions to the message",
          "items": {
            "$ref": "#/definitions/reaction"
          }
        }
      },
      "required": [
        "id",
        "from",
        "body",
        "createdDateTime"
      ]
    },
    "attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the attachment",
          "format": "uuid"
        },
        "contentType": {
          "type": "string",
          "description": "MIME type of the attachment"
        },
        "contentUrl": {
          "type": "string",
          "description": "URL to the attachment content",
          "format": "URL"
        },
        "content": {
          "type": "string",
          "description": "Content of the attachment (if not represented by a URL)"
        },
        "name": {
          "type": "string",
          "description": "Name of the attachment"
        },
        "thumbnailUrl": {
          "type": "string",
          "description": "URL to a thumbnail of the attachment (if applicable)",
          "format": "URL"
        }
      },
      "required": [
        "id"
      ]
    },
    "mention": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Index of the mention within the message content"
        },
        "mentionText": {
          "type": "string",
          "description": "Text representation of the mention in the message content"
        },
        "mentioned": {
          "type": "object",
          "description": "The entity mentioned",
          "properties": {
            "user": {
              "$ref": "#/definitions/user"
            },
            "conversation": {
              "type": "object",
              "description": "Represents the conversation where the mention occurred",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "displayName": {
                  "type": "string"
                }
              }
            },
            "application": {
              "$ref": "#/definitions/application"
            }
          }
        }
      },
      "required": [
        "id",
        "mentioned"
      ]
    },
    "reaction": {
      "type": "object",
      "properties": {
        "reactionType": {
          "type": "string",
          "description": "Type of reaction (e.g., 'like', 'heart', 'laugh', 'surprised', 'sad', 'angry')",
          "enum": ["like", "heart", "laugh", "surprised", "sad", "angry"]
        },
        "createdDateTime": {
          "type": "string",
          "description": "Timestamp when the reaction was created",
          "format": "date-time"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "reactionType",
        "createdDateTime",
        "user"
      ]
    },
    "tab": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the tab",
          "format": "uuid"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the tab"
        },
        "webUrl": {
          "type": "string",
          "description": "URL to access the tab in the web client",
          "format": "URL"
        },
        "configuration": {
          "type": "object",
          "description": "Configuration settings for the tab"
        },
        "teamsAppId": {
          "type": "string",
          "description": "Id of the Teams app this tab is associated with"
        }
      },
      "required": [
        "id",
        "displayName",
        "teamsAppId"
      ]
    },
    "app": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the app",
          "format": "uuid"
        },
        "externalId": {
          "type": "string",
          "description": "External Id of the app"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the app"
        },
        "distributionMethod": {
          "type": "string",
          "description": "Method by which the app is distributed (e.g., 'store', 'sideloaded')",
          "enum": ["store", "organization", "sideloaded"]
        }
      },
      "required": [
        "id",
        "displayName",
        "distributionMethod"
      ]
    },
    "guestSettings": {
      "type": "object",
      "properties": {
        "allowCreateUpdateChannels": {
          "type": "boolean",
          "description": "Indicates if guests can create and update channels"
        },
        "allowDeleteChannels": {
          "type": "boolean",
          "description": "Indicates if guests can delete channels"
        }
      },
      "required": [
        "allowCreateUpdateChannels",
        "allowDeleteChannels"
      ]
    },
    "messagingSettings": {
      "type": "object",
      "properties": {
        "allowUserEditMessages": {
          "type": "boolean",
          "description": "Indicates if users can edit their messages"
        },
        "allowUserDeleteMessages": {
          "type": "boolean",
          "description": "Indicates if users can delete their messages"
        },
        "allowOwnerDeleteMessages": {
          "type": "boolean",
          "description": "Indicates if owners can delete any message"
        },
        "allowTeamMentions": {
          "type": "boolean",
          "description": "Indicates if team mentions (@team) are allowed"
        },
        "allowChannelMentions": {
          "type": "boolean",
          "description": "Indicates if channel mentions (@channel) are allowed"
        }
      },
      "required": [
        "allowUserEditMessages",
        "allowUserDeleteMessages",
        "allowOwnerDeleteMessages",
        "allowTeamMentions",
        "allowChannelMentions"
      ]
    },
    "funSettings": {
      "type": "object",
      "properties": {
        "allowGiphy": {
          "type": "boolean",
          "description": "Indicates if Giphy usage is allowed"
        },
        "giphyContentRating": {
          "type": "string",
          "description": "Content rating for Giphy (e.g., 'strict', 'moderate')",
          "enum": ["strict", "moderate"]
        },
        "allowStickersAndMemes": {
          "type": "boolean",
          "description": "Indicates if stickers and memes are allowed"
        },
        "allowCustomMemes": {
          "type": "boolean",
          "description": "Indicates if custom memes are allowed"
        }
      },
      "required": [
        "allowGiphy",
        "giphyContentRating",
        "allowStickersAndMemes",
        "allowCustomMemes"
      ]
    },
    "application": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The unique identifier of the application."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        }
      },
      "required": [
        "id"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Signal App Data Model",
  "description": "A JSON Schema representing the core data structures of the Signal messaging app.",
  "type": "object",
  "properties": {
    "users": {
      "type": "array",
      "description": "Registered users in the system.",
      "items": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "description": "E.164 formatted phone number."
          },
          "publicKey": {
            "type": "string",
            "description": "User's public encryption key."
          },
          "privateKey": {
            "type": "string",
            "description": "User's private encryption key (should be stored securely and locally on device)."
          },
          "profile": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's display name."
              },
              "avatar": {
                "type": "string",
                "format": "URL",
                "description": "URL to the user's profile picture."
              },
              "about": {
                "type": "string",
                "description": "A short bio or status message."
              }
            },
            "required": [
              "name"
            ]
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the user registered."
          },
          "lastActive": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the user was last active."
          },
          "contacts": {
            "type": "array",
            "description": "List of the user's contacts who are also on Signal.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "userId of a contact."
            }
          }
        },
        "required": [
          "userId",
          "phoneNumber",
          "publicKey",
          "privateKey",
          "profile"
        ]
      }
    },
    "conversations": {
      "type": "array",
      "description": "List of conversations (individual and group chats).",
      "items": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the conversation."
          },
          "type": {
            "type": "string",
            "enum": [
              "one-to-one",
              "group"
            ],
            "description": "Type of conversation."
          },
          "participants": {
            "type": "array",
            "description": "List of user IDs participating in the conversation.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "userId of a participant."
            },
            "minItems": 2
          },
          "groupMetadata": {
            "type": "object",
            "description": "Metadata for group conversations.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the group."
              },
              "avatar": {
                "type": "string",
                "format": "URL",
                "description": "URL to the group's profile picture."
              },
              "admins": {
                "type": "array",
                "description": "List of user IDs who are admins of the group.",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "name",
              "admins"
            ],
            "if": {
              "properties": {
                "type": {
                  "const": "group"
                }
              }
            },
            "then": {
              "required": [
                "groupMetadata"
              ]
            }
          },
          "messages": {
            "type": "array",
            "description": "List of messages in the conversation.",
            "items": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the message."
                },
                "senderId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "userId of the message sender."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time the message was sent."
                },
                "content": {
                  "type": "object",
                  "description": "Encrypted message content.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "attachment",
                        "groupUpdate",
                        "call",
                        "disappearingMessageTimerUpdate",
                        "viewOnce"
                      ],
                      "description": "Type of message content."
                    },
                    "ciphertext": {
                      "type": "string",
                      "description": "Base64 encoded encrypted message data."
                    },
                    "attachmentMetadata": {
                      "type": "object",
                      "description": "Metadata for attachments, only present if type is 'attachment'.",
                      "properties": {
                        "filename": {
                          "type": "string"
                        },
                        "contentType": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "key": {
                          "type": "string",
                          "description": "Encryption key for the attachment"
                        }
                      },
                      "required": ["filename", "contentType", "size", "key"],
                      "if": {
                        "properties": {
                          "type": {
                            "const": "attachment"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "attachmentMetadata"
                        ]
                      }
                    },
                    "groupUpdateMetadata": {
                      "type": "object",
                      "description": "Metadata for group updates, like adding a user.",
                      "properties": {
                        "updatedBy": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "addedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "removedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "changedName": {
                          "type": "string"
                        },
                        "changedAvatar": {
                          "type": "string",
                          "format": "URL"
                        }
                      },
                      "if": {
                        "properties": {
                          "type": {
                            "const": "groupUpdate"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "groupUpdateMetadata"
                        ]
                      }
                    },
                    "callMetadata": {
                      "type": "object",
                      "description": "Metadata for calls",
                      "properties": {
                        "callType": {
                          "type": "string",
                          "enum": ["audio", "video"]
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Call duration in seconds"
                        }
                      },
                      "required": ["callType"],
                      "if": {
                        "properties": {
                          "type": {
                            "const": "call"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "callMetadata"
                        ]
                      }
                    },
                    "disappearingMessageTimerMetadata": {
                      "type": "object",
                      "description": "Metadata for disappearing message timer updates",
                      "properties": {
                        "duration": {
                          "type": "integer",
                          "description": "Disappearing message duration in seconds. 0 means disabled."
                        }
                      },
                      "required": ["duration"],
                      "if": {
                        "properties": {
                          "type": {
                            "const": "disappearingMessageTimerUpdate"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "disappearingMessageTimerMetadata"
                        ]
                      }
                    },
                    "viewOnceMetadata": {
                      "type": "object",
                      "description": "Metadata for view-once messages",
                      "properties": {
                        "viewed": {
                          "type": "boolean",
                          "description": "Indicates if the message has been viewed"
                        }
                      },
                      "required": ["viewed"],
                      "if": {
                        "properties": {
                          "type": {
                            "const": "viewOnce"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "viewOnceMetadata"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "ciphertext"
                  ]
                },
                "readReceipts": {
                  "type": "array",
                  "description": "List of read receipts for the message.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "readerId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["readerId", "timestamp"]
                  }
                },
                "deliveryReceipts": {
                  "type": "array",
                  "description": "List of delivery receipts for the message.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipientId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["recipientId", "timestamp"]
                  }
                },
                "reactions": {
                  "type": "array",
                  "description": "List of reactions to the message.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reactorId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "emoji": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["reactorId", "emoji", "timestamp"]
                  }
                },
                "isExpired": {
                  "type": "boolean",
                  "description": "Indicates if the message has expired (for disappearing messages)."
                },
                "isForwarded": {
                  "type": "boolean",
                  "description": "Indicates if the message was forwarded."
                }
              },
              "required": [
                "messageId",
                "senderId",
                "timestamp",
                "content"
              ]
            }
          }
        },
        "required": [
          "conversationId",
          "type",
          "participants",
          "messages"
        ]
      }
    },
    "blockedUsers": {
      "type": "array",
      "description": "List of blocked users.",
      "items": {
        "type": "string",
        "format": "uuid",
        "description": "userId of a blocked user."
      }
    },
    "settings": {
      "type": "object",
      "description": "User-specific settings.",
      "properties": {
        "notifications": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "sound": {
              "type": "string",
              "description": "Path to the notification sound file."
            },
            "vibrate": {
              "type": "boolean"
            },
            "preview": {
              "type": "string",
              "enum": ["show", "name", "none"]
            }
          },
          "required": ["enabled", "preview"]
        },
        "privacy": {
          "type": "object",
          "properties": {
            "readReceipts": {
              "type": "boolean"
            },
            "typingIndicators": {
              "type": "boolean"
            },
            "lastSeen": {
              "type": "string",
              "enum": ["everyone", "contacts", "nobody"]
            },
            "profile": {
              "type": "string",
              "enum": ["everyone", "contacts"]
            }
          },
          "required": [
            "readReceipts",
            "typingIndicators",
            "lastSeen",
            "profile"
          ]
        },
        "security": {
          "type": "object",
          "properties": {
            "screenLock": {
              "type": "boolean"
            },
            "screenSecurity": {
              "type": "boolean",
              "description": "Prevent screenshots and screen recording."
            },
            "registrationLock": {
              "type": "boolean",
              "description": "Require a PIN to re-register the phone number."
            },
            "changeNumber": {
              "type": "object",
              "description": "Allows to change phone number associated with account"
            }
          },
          "required": [
            "screenLock",
            "screenSecurity",
            "registrationLock"
          ]
        },
        "storage": {
          "type": "object",
          "properties": {
            "mediaAutoDownload": {
              "type": "object",
              "properties": {
                "wifi": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["photos", "audio", "videos", "documents"]
                  }
                },
                "mobileData": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["photos", "audio", "videos", "documents"]
                  }
                },
                "roaming": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["photos", "audio", "videos", "documents"]
                  }
                }
              },
              "required": ["wifi", "mobileData", "roaming"]
            },
            "keepMessages": {
              "type": "string",
              "enum": ["forever", "1 year", "30 days", "6 months"],
              "description": "How long to keep messages on the device."
            }
          },
          "required": ["mediaAutoDownload", "keepMessages"]
        }
      },
      "required": [
        "notifications",
        "privacy",
        "security",
        "storage"
      ]
    }
  },
  "required": [
    "users",
    "conversations"
  ]
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Skype Application",
  "description": "JSON Schema for a simplified representation of the Skype application.",
  "type": "object",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of users in the Skype network.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user."
          },
          "username": {
            "type": "string",
            "description": "User's Skype username.",
            "minLength": 6,
            "maxLength": 32,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\.,\\-_]{5,31}$"
          },
          "displayName": {
            "type": "string",
            "description": "User's display name (can be different from username).",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address (used for account recovery, etc.)."
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number (optional).",
            "pattern": "^\\+[1-9]\\d{1,14}$"
          },
          "status": {
            "type": "string",
            "description": "User's current online status.",
            "enum": ["Online", "Away", "Do Not Disturb", "Invisible", "Offline"]
          },
          "profilePicture": {
            "type": "string",
            "format": "URL",
            "description": "URL to the user's profile picture (optional)."
          },
          "contacts": {
            "type": "array",
            "description": "List of user IDs representing the user's contacts.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "blockedUsers": {
            "type": "array",
            "description": "List of user IDs that this user has blocked.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "id",
          "username",
          "displayName",
          "email"
        ]
      }
    },
    "conversations": {
      "type": "array",
      "description": "List of conversations.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the conversation."
          },
          "type": {
            "type": "string",
            "description": "Type of conversation (e.g., 'one-to-one', 'group').",
            "enum": ["one-to-one", "group"]
          },
          "participants": {
            "type": "array",
            "description": "List of user IDs participating in the conversation.",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 2
          },
          "messages": {
            "type": "array",
            "description": "List of messages in the conversation.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the message."
                },
                "senderId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "User ID of the message sender."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of when the message was sent."
                },
                "content": {
                  "type": "string",
                  "description": "Content of the message (text, media URL, etc.).",
                  "maxLength": 10000
                },
                "type": {
                  "type": "string",
                  "description": "The type of content in the message",
                  "enum": ["text", "image", "video", "audio", "file", "contact", "location"]
                },
                "readBy": {
                  "type": "array",
                  "description": "List of user IDs who have read the message.",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "id",
                "senderId",
                "timestamp",
                "content",
                "type"
              ]
            }
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last activity in the conversation."
          }
        },
        "required": [
          "id",
          "type",
          "participants",
          "messages"
        ]
      }
    },
    "groups": {
      "type": "array",
      "description": "List of groups",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the group"
          },
          "name": {
            "type": "string",
            "description": "The name of the group",
            "maxLength": 255
          },
          "members": {
            "type": "array",
            "description": "List of user IDs that are members of this group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "admins": {
            "type": "array",
            "description": "List of user IDs that are admins in this group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["id", "name", "members", "admins"]
      }
    },
    "calls": {
      "type": "array",
      "description": "Log of calls made or received.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the call."
          },
          "participants": {
            "type": "array",
            "description": "List of user IDs participating in the call.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the call started."
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the call ended."
          },
          "type": {
            "type": "string",
            "description": "Type of call (e.g., 'audio', 'video').",
            "enum": ["audio", "video"]
          },
          "status": {
            "type": "string",
            "description": "Status of the call (e.g., 'missed', 'answered', 'declined').",
            "enum": ["missed", "answered", "declined", "outgoing", "incoming"]
          }
        },
        "required": [
          "id",
          "participants",
          "startTime",
          "type",
          "status"
        ]
      }
    }
  },
  "required": [
    "users",
    "conversations",
    "groups",
    "calls"
  ]
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Slack App",
  "description": "Schema for a Slack App configuration",
  "type": "object",
  "properties": {
    "app_id": {
      "type": "string",
      "description": "Unique identifier for the Slack app",
      "pattern": "^A[A-Z0-9]{8,}$"
    },
    "app_name": {
      "type": "string",
      "description": "Name of the Slack app",
      "minLength": 1,
      "maxLength": 80
    },
    "app_description": {
      "type": "string",
      "description": "A short description of what the app does",
      "maxLength": 190
    },
    "long_description": {
      "type": "string",
      "description": "A longer, more detailed description of the app's capabilities and features",
      "maxLength": 5000
    },
    "is_distributed": {
      "type": "boolean",
      "description": "Indicates if the app is distributed on the Slack App Directory"
    },
    "is_workflow_app": {
      "type": "boolean",
      "description": "Indicates if the app is a workflow app"
    },
    "is_hosted": {
      "type": "boolean",
      "description": "Indicates if the app is hosted on Slack's infrastructure"
    },
    "verification_token": {
      "type": "string",
      "description": "Token used to verify requests from Slack (deprecated in favor of Signing Secret)"
    },
    "signing_secret": {
      "type": "string",
      "description": "Secret used to verify requests from Slack"
    },
    "bot_user": {
      "type": "object",
      "description": "Configuration for the app's bot user",
      "properties": {
        "always_online": {
          "type": "boolean",
          "description": "Whether the bot user should always appear online"
        },
        "display_name": {
          "type": "string",
          "description": "Display name for the bot user (e.g., @mybot)",
          "minLength": 1,
          "maxLength": 80
        }
      },
      "required": [
        "display_name"
      ]
    },
    "oauth_config": {
      "type": "object",
      "description": "OAuth 2.0 configuration for the app",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "OAuth Client ID",
          "pattern": "^\\d{12,}\\.\\d{12,}$"
        },
        "client_secret": {
          "type": "string",
          "description": "OAuth Client Secret"
        },
        "redirect_urls": {
          "type": "array",
          "description": "List of allowed redirect URLs for OAuth",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "minItems": 1
        },
        "scopes": {
          "type": "array",
          "description": "List of OAuth scopes the app requires",
          "items": {
            "type": "string",
            "description": "A valid Slack OAuth scope",
            "enum": [
              "admin",
              "admin.apps:read",
              "admin.apps:write",
              "admin.conversations:read",
              "admin.conversations:write",
              "admin.invites:read",
              "admin.invites:write",
              "admin.teams:read",
              "admin.teams:write",
              "admin.users:read",
              "admin.users:write",
              "admin.usergroups:read",
              "admin.usergroups:write",
              "admin.workspaces:read",
              "admin.workspaces:write",
              "app_mentions:read",
              "auditlogs:read",
              "authorizations:read",
              "bookmarks:read",
              "bookmarks:write",
              "calls:read",
              "calls:write",
              "channels:history",
              "channels:join",
              "channels:manage",
              "channels:read",
              "channels:write",
              "chat:write",
              "chat:write:bot",
              "chat:write:user",
              "conversations:history",
              "conversations:write",
              "dnd:read",
              "dnd:write",
              "emoji:read",
              "files:read",
              "files:write",
              "files:write:user",
              "groups:history",
              "groups:read",
              "groups:write",
              "identity.basic",
              "identity.email",
              "identity.team",
              "identity.avatar",
              "im:history",
              "im:read",
              "im:write",
              "links:read",
              "links:write",
              "metadata.message:read",
              "mpim:history",
              "mpim:read",
              "mpim:write",
              "openid",
              "pins:read",
              "pins:write",
              "profile",
              "reactions:read",
              "reactions:write",
              "reminders:read",
              "reminders:write",
              "remote_files:read",
              "remote_files:share",
              "remote_files:write",
              "search:read",
              "stars:read",
              "stars:write",
              "team:read",
              "tokens.basic",
              "usergroups:read",
              "usergroups:write",
              "users.profile:read",
              "users.profile:write",
              "users:read",
              "users:read.email",
              "users:write",
              "workflow.steps:execute",
              "none"
            ]
          },
          "uniqueItems": true
        },
        "user_scopes": {
          "type": "array",
          "description": "List of user token OAuth scopes the app requires (if applicable)",
          "items": {
            "type": "string",
            "description": "A valid Slack user token OAuth scope (see 'scopes' for possible values)",
            "enum": [
              "admin",
              "admin.apps:read",
              "admin.apps:write",
              "admin.conversations:read",
              "admin.conversations:write",
              "admin.invites:read",
              "admin.invites:write",
              "admin.teams:read",
              "admin.teams:write",
              "admin.users:read",
              "admin.users:write",
              "admin.usergroups:read",
              "admin.usergroups:write",
              "admin.workspaces:read",
              "admin.workspaces:write",
              "app_mentions:read",
              "auditlogs:read",
              "authorizations:read",
              "bookmarks:read",
              "bookmarks:write",
              "calls:read",
              "calls:write",
              "channels:history",
              "channels:join",
              "channels:manage",
              "channels:read",
              "channels:write",
              "chat:write",
              "chat:write:bot",
              "chat:write:user",
              "conversations:history",
              "conversations:write",
              "dnd:read",
              "dnd:write",
              "emoji:read",
              "files:read",
              "files:write",
              "files:write:user",
              "groups:history",
              "groups:read",
              "groups:write",
              "identity.basic",
              "identity.email",
              "identity.team",
              "identity.avatar",
              "im:history",
              "im:read",
              "im:write",
              "links:read",
              "links:write",
              "metadata.message:read",
              "mpim:history",
              "mpim:read",
              "mpim:write",
              "openid",
              "pins:read",
              "pins:write",
              "profile",
              "reactions:read",
              "reactions:write",
              "reminders:read",
              "reminders:write",
              "remote_files:read",
              "remote_files:share",
              "remote_files:write",
              "search:read",
              "stars:read",
              "stars:write",
              "team:read",
              "tokens.basic",
              "usergroups:read",
              "usergroups:write",
              "users.profile:read",
              "users.profile:write",
              "users:read",
              "users:read.email",
              "users:write",
              "workflow.steps:execute",
              "none"
            ]
          },
          "uniqueItems": true
        }
      },
      "required": [
        "client_id",
        "client_secret",
        "scopes"
      ]
    },
    "event_subscriptions": {
      "type": "object",
      "description": "Configuration for Event Subscriptions",
      "properties": {
        "request_url": {
          "type": "string",
          "description": "URL where Slack will send events",
          "format": "uri"
        },
        "bot_events": {
          "type": "array",
          "description": "List of bot events the app subscribes to",
          "items": {
            "type": "string",
            "description": "A valid Slack bot event type",
            "enum": [
              "app_mention",
              "app_rate_limited",
              "app_uninstalled",
              "call_rejected",
              "channel_archive",
              "channel_created",
              "channel_deleted",
              "channel_history_changed",
              "channel_id_changed",
              "channel_left",
              "channel_rename",
              "channel_unarchive",
              "dnd_updated",
              "email_domain_changed",
              "emoji_changed",
              "file_change",
              "file_comment_added",
              "file_comment_deleted",
              "file_comment_edited",
              "file_created",
              "file_deleted",
              "file_public",
              "file_shared",
              "file_unshared",
              "grid_migration_finished",
              "grid_migration_started",
              "group_archive",
              "group_close",
              "group_deleted",
              "group_history_changed",
              "group_left",
              "group_open",
              "group_rename",
              "group_unarchive",
              "im_close",
              "im_created",
              "im_history_changed",
              "im_open",
              "link_shared",
              "member_joined_channel",
              "member_left_channel",
              "message",
              "message.channels",
              "message.groups",
              "message.im",
              "message.mpim",
              "pin_added",
              "pin_removed",
              "reaction_added",
              "reaction_removed",
              "resources_added",
              "resources_removed",
              "scope_denied",
              "scope_granted",
              "shared_channel_invite_accepted",
              "shared_channel_invite_approved",
              "shared_channel_invite_declined",
              "shared_channel_invite_received",
              "star_added",
              "star_removed",
              "subteam_created",
              "subteam_members_changed",
              "subteam_self_added",
              "subteam_self_removed",
              "subteam_updated",
              "team_domain_change",
              "team_join",
              "team_rename",
              "tokens_revoked",
              "url_verification",
              "user_change",
              "user_huddle_changed",
              "user_profile_changed",
              "user_resource_denied",
              "user_resource_granted",
              "user_resource_removed",
              "user_status_changed",
              "workflow_deleted",
              "workflow_published",
              "workflow_step_deleted",
              "workflow_step_execute",
              "workflow_unpublished"
            ]
          },
          "uniqueItems": true
        },
        "user_events": {
          "type": "array",
          "description": "List of user events the app subscribes to (requires user token scopes)",
          "items": {
            "type": "string",
            "description": "A valid Slack user event type (see 'bot_events' for possible values)",
            "enum": [
              "app_mention",
              "app_rate_limited",
              "app_uninstalled",
              "call_rejected",
              "channel_archive",
              "channel_created",
              "channel_deleted",
              "channel_history_changed",
              "channel_id_changed",
              "channel_left",
              "channel_rename",
              "channel_unarchive",
              "dnd_updated",
              "email_domain_changed",
              "emoji_changed",
              "file_change",
              "file_comment_added",
              "file_comment_deleted",
              "file_comment_edited",
              "file_created",
              "file_deleted",
              "file_public",
              "file_shared",
              "file_unshared",
              "grid_migration_finished",
              "grid_migration_started",
              "group_archive",
              "group_close",
              "group_deleted",
              "group_history_changed",
              "group_left",
              "group_open",
              "group_rename",
              "group_unarchive",
              "im_close",
              "im_created",
              "im_history_changed",
              "im_open",
              "link_shared",
              "member_joined_channel",
              "member_left_channel",
              "message",
              "message.channels",
              "message.groups",
              "message.im",
              "message.mpim",
              "pin_added",
              "pin_removed",
              "reaction_added",
              "reaction_removed",
              "resources_added",
              "resources_removed",
              "scope_denied",
              "scope_granted",
              "shared_channel_invite_accepted",
              "shared_channel_invite_approved",
              "shared_channel_invite_declined",
              "shared_channel_invite_received",
              "star_added",
              "star_removed",
              "subteam_created",
              "subteam_members_changed",
              "subteam_self_added",
              "subteam_self_removed",
              "subteam_updated",
              "team_domain_change",
              "team_join",
              "team_rename",
              "tokens_revoked",
              "url_verification",
              "user_change",
              "user_huddle_changed",
              "user_profile_changed",
              "user_resource_denied",
              "user_resource_granted",
              "user_resource_removed",
              "user_status_changed",
              "workflow_deleted",
              "workflow_published",
              "workflow_step_deleted",
              "workflow_step_execute",
              "workflow_unpublished"
            ]
          },
          "uniqueItems": true
        }
      },
      "required": [
        "request_url"
      ]
    },
    "interactivity": {
      "type": "object",
      "description": "Configuration for interactive components",
      "properties": {
        "is_enabled": {
          "type": "boolean",
          "description": "Whether interactivity is enabled for the app"
        },
        "request_url": {
          "type": "string",
          "description": "URL where Slack will send interactive component payloads",
          "format": "uri"
        },
        "message_menu_options_url": {
          "type": "string",
          "description": "URL where Slack will fetch options for message menus",
          "format": "uri"
        }
      }
    },
    "slash_commands": {
      "type": "array",
      "description": "List of slash commands the app provides",
      "items": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "description": "The slash command (e.g., /mycommand)",
            "pattern": "^\\/[a-z0-9_-]{1,22}$"
          },
          "url": {
            "type": "string",
            "description": "URL where Slack will send the command payload",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "description": "A short description of the command",
            "maxLength": 75
          },
          "usage_hint": {
            "type": "string",
            "description": "A hint on how to use the command",
            "maxLength": 75
          },
          "should_escape": {
            "type": "boolean",
            "description": "Whether to escape channels, users, and links in the command"
          }
        },
        "required": [
          "command",
          "url",
          "description"
        ]
      },
      "uniqueItems": true
    },
    "unfurl_domains": {
      "type": "array",
      "description": "List of domains for link unfurling",
      "items": {
        "type": "string",
        "format": "hostname"
      },
      "uniqueItems": true
    },
    "install_options": {
      "type": "object",
      "description": "Defines how the app may be added to a workspace",
      "properties": {
        "direct_install_url": {
          "type": "string",
          "description": "A URL to install your app directly. Can be shared without the Slack App Directory",
          "format": "uri"
        },
        "redirect_uri": {
          "type": "string",
          "description": "An alternative redirect URI for a custom distribution flow",
          "format": "uri"
        }
      }
    },
    "ip_allow_list": {
      "type": "object",
      "description": "Configuration for the app's IP Allow List",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the IP Allow List is enabled"
        },
        "ipv4_addresses": {
          "type": "array",
          "description": "List of allowed IPv4 addresses",
          "items": {
            "type": "string",
            "format": "ipv4"
          },
          "uniqueItems": true
        },
        "ipv6_addresses": {
          "type": "array",
          "description": "List of allowed IPv6 addresses",
          "items": {
            "type": "string",
            "format": "ipv6"
          },
          "uniqueItems": true
        }
      }
    },
    "features": {
      "type": "object",
      "description": "Additional features and capabilities of the app",
      "properties": {
        "shortcuts": {
          "type": "array",
          "description": "List of app shortcuts",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the shortcut",
                "maxLength": 32
              },
              "callback_id": {
                "type": "string",
                "description": "Unique identifier for the shortcut",
                "maxLength": 255
              },
              "description": {
                "type": "string",
                "description": "A short description of the shortcut",
                "maxLength": 75
              },
              "type": {
                "type": "string",
                "description": "The type of shortcut (global, message)",
                "enum": ["global", "message"]
              }
            },
            "required": [
              "name",
              "callback_id",
              "description",
              "type"
            ]
          },
          "uniqueItems": true
        },
        "workflow_steps": {
          "type": "array",
          "description": "List of Workflow Builder steps your app provides",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the workflow step",
                "maxLength": 75
              },
              "callback_id": {
                "type": "string",
                "description": "Unique identifier for the workflow step",
                "maxLength": 255
              },
              "description": {
                "type": "string",
                "description": "A description of what the workflow step does",
                "maxLength": 255
              }
            },
            "required": [
              "name",
              "callback_id",
              "description"
            ]
          }
        },
        "bot_user": {
          "type": "object",
          "description": "Additional bot user features",
          "properties": {
            "slice_config": {
              "type": "object",
              "description": "Configuration for Slices. Enables your bot user to use multiple surfaces.",
              "properties": {
                "home_tab_enabled": {
                  "type": "boolean",
                  "description": "Whether your bot user can use Home tab"
                },
                "messages_tab_enabled": {
                  "type": "boolean",
                  "description": "Whether your bot user can use Messages tab"
                },
                "messages_tab_read_only_enabled": {
                  "type": "boolean",
                  "description": "Whether your bot user has read-only access to Messages tab"
                }
              }
            }
          }
        }
      }
    }
  },
  "required": [
    "app_name",
    "app_description",
    "oauth_config"
  ]
}{
  "type": "object",
  "title": "Telegram Application",
  "description": "JSON Schema representation of the Telegram Application data model",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of registered users",
      "items": {
        "type": "object",
        "title": "User",
        "description": "Represents a Telegram user",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "description": "User's last name",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "nullable": true,
            "pattern": "^[a-zA-Z0-9_]{5,}$"
          },
          "phone_number": {
            "type": "string",
            "description": "User's phone number (may not be visible to everyone based on privacy settings)",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$"
          },
          "photo": {
            "type": "object",
            "description": "User's profile photo",
            "nullable": true,
            "properties": {
              "small_file_id": {
                "type": "string",
                "description": "Unique file identifier for the small profile photo"
              },
              "small_file_unique_id": {
                "type": "string",
                "description": "Unique file identifier for the small profile photo, which is supposed to be the same over time and for different bots"
              },
              "big_file_id": {
                "type": "string",
                "description": "Unique file identifier for the big profile photo"
              },
              "big_file_unique_id": {
                "type": "string",
                "description": "Unique file identifier for the big profile photo, which is supposed to be the same over time and for different bots"
              }
            },
            "required": [
              "small_file_id",
              "small_file_unique_id",
              "big_file_id",
              "big_file_unique_id"
            ]
          },
          "bio": {
            "type": "string",
            "description": "Description of the user",
            "nullable": true,
            "maxLength": 70
          },
          "is_bot": {
            "type": "boolean",
            "description": "True, if this user is a bot"
          },
          "is_verified": {
            "type": "boolean",
            "description": "True, if this user has a verified account"
          },
          "is_scam": {
            "type": "boolean",
            "description": "True, if this user has been marked as a scam account"
          },
          "is_fake": {
            "type": "boolean",
            "description": "True, if this user has been marked as a fake account"
          }
        },
        "required": [
          "id",
          "first_name",
          "is_bot"
        ]
      }
    },
    "chats": {
      "type": "array",
      "description": "List of chats",
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/private_chat"
          },
          {
            "$ref": "#/$defs/group_chat"
          },
          {
            "$ref": "#/$defs/supergroup_chat"
          },
          {
            "$ref": "#/$defs/channel_chat"
          }
        ]
      }
    },
    "messages": {
      "type": "array",
      "description": "List of messages",
      "items": {
        "$ref": "#/$defs/message"
      }
    }
  },
  "required": [
    "users",
    "chats",
    "messages"
  ],
  "$defs": {
    "private_chat": {
      "type": "object",
      "title": "Private Chat",
      "description": "Represents a private chat with another user",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for this chat",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of chat, should be \"private\"",
          "const": "private"
        },
        "user_id": {
          "type": "integer",
          "description": "Unique identifier of the other user in the private chat"
        }
      },
      "required": [
        "id",
        "type",
        "user_id"
      ]
    },
    "group_chat": {
      "type": "object",
      "title": "Group Chat",
      "description": "Represents a group chat",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for this chat",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of chat, should be \"group\"",
          "const": "group"
        },
        "title": {
          "type": "string",
          "description": "Title of the group chat"
        },
        "members": {
          "type": "array",
          "description": "List of group members",
          "items": {
            "type": "integer",
            "description": "User ID of a group member"
          }
        }
      },
      "required": [
        "id",
        "type",
        "title",
        "members"
      ]
    },
    "supergroup_chat": {
      "type": "object",
      "title": "Supergroup Chat",
      "description": "Represents a supergroup chat",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for this chat",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of chat, should be \"supergroup\"",
          "const": "supergroup"
        },
        "title": {
          "type": "string",
          "description": "Title of the supergroup chat"
        },
        "members": {
          "type": "array",
          "description": "List of supergroup members (not fully accessible - only via specific API calls)",
          "items": {
            "type": "integer",
            "description": "User ID of a supergroup member"
          }
        },
        "username": {
          "type": "string",
          "description": "Username of the supergroup, if any",
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the supergroup, if any",
          "nullable": true
        },
        "invite_link": {
          "type": "string",
          "description": "Invite link of the supergroup, if any",
          "nullable": true
        },
        "pinned_message_id": {
          "type": "integer",
          "description": "Unique identifier of the pinned message, if any",
          "nullable": true
        },
        "is_forum": {
          "type": "boolean",
          "description": "True, if the supergroup is a forum (has topics)"
        }
      },
      "required": [
        "id",
        "type",
        "title"
      ]
    },
    "channel_chat": {
      "type": "object",
      "title": "Channel Chat",
      "description": "Represents a channel",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for this chat",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of chat, should be \"channel\"",
          "const": "channel"
        },
        "title": {
          "type": "string",
          "description": "Title of the channel"
        },
        "username": {
          "type": "string",
          "description": "Username of the channel, if any",
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the channel, if any",
          "nullable": true
        },
        "invite_link": {
          "type": "string",
          "description": "Invite link of the channel, if any",
          "nullable": true
        },
        "pinned_message_id": {
          "type": "integer",
          "description": "Unique identifier of the pinned message, if any",
          "nullable": true
        }
      },
      "required": [
        "id",
        "type",
        "title"
      ]
    },
    "message": {
      "type": "object",
      "title": "Message",
      "description": "Represents a message",
      "properties": {
        "message_id": {
          "type": "integer",
          "description": "Unique message identifier",
          "readOnly": true
        },
        "from": {
          "type": "integer",
          "description": "User ID of the sender"
        },
        "chat_id": {
          "type": "integer",
          "description": "Unique identifier for the chat where the message belongs"
        },
        "date": {
          "type": "integer",
          "description": "Date the message was sent in Unix time"
        },
        "text": {
          "type": "string",
          "description": "For text messages, the actual UTF-8 text of the message",
          "nullable": true
        },
        "entities": {
          "type": "array",
          "description": "Special entities like usernames, URLs, bot commands, etc. that appear in the text",
          "nullable": true,
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mention",
                  "hashtag",
                  "cashtag",
                  "bot_command",
                  "url",
                  "email",
                  "phone_number",
                  "bold",
                  "italic",
                  "underline",
                  "strikethrough",
                  "spoiler",
                  "code",
                  "pre",
                  "text_link",
                  "text_mention"
                ]
              },
              "offset": {
                "type": "integer",
                "description": "Offset in UTF-16 code units to the start of the entity"
              },
              "length": {
                "type": "integer",
                "description": "Length of the entity in UTF-16 code units"
              },
              "url": {
                "type": "string",
                "description": "For “text_link” only, url that will be opened after user taps on the text",
                "nullable": true
              },
              "user": {
                "type": "object",
                "description": "For “text_mention” only, the mentioned user",
                "nullable": true,
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "required": ["id"]
              },
              "language": {
                "type": "string",
                "description": "For “pre” only, the programming language of the entity text",
                "nullable": true
              }
            },
            "required": [
              "type",
              "offset",
              "length"
            ]
          }
        },
        "reply_to_message_id": {
          "type": "integer",
          "description": "For replies, the original message's ID",
          "nullable": true
        },
        "media_group_id": {
          "type": "string",
          "description": "The unique identifier of a media message group this message belongs to",
          "nullable": true
        },
        "photo": {
          "type": "array",
          "description": "Message is a photo, available sizes of the photo",
          "nullable": true,
          "items": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string"
              },
              "file_unique_id": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "file_size": {
                "type": "integer",
                "nullable": true
              }
            },
            "required": [
              "file_id",
              "file_unique_id",
              "width",
              "height"
            ]
          }
        },
        "video": {
          "type": "object",
          "description": "Message is a video",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "width": {
              "type": "integer"
            },
            "height": {
              "type": "integer"
            },
            "duration": {
              "type": "integer"
            },
            "thumbnail": {
              "type": "object",
              "nullable": true,
              "properties": {
                "file_id": {
                  "type": "string"
                },
                "file_unique_id": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "file_size": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "file_id",
                "file_unique_id",
                "width",
                "height"
              ]
            },
            "file_name": {
              "type": "string",
              "nullable": true
            },
            "mime_type": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "file_id",
            "file_unique_id",
            "width",
            "height",
            "duration"
          ]
        },
        "document": {
          "type": "object",
          "description": "Message is a general file",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "thumbnail": {
              "type": "object",
              "nullable": true,
              "properties": {
                "file_id": {
                  "type": "string"
                },
                "file_unique_id": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "file_size": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "file_id",
                "file_unique_id",
                "width",
                "height"
              ]
            },
            "file_name": {
              "type": "string",
              "nullable": true
            },
            "mime_type": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "file_id",
            "file_unique_id"
          ]
        },
        "audio": {
          "type": "object",
          "description": "Message is an audio file",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "duration": {
              "type": "integer"
            },
            "performer": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "file_name": {
              "type": "string",
              "nullable": true
            },
            "mime_type": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            },
            "thumbnail": {
              "type": "object",
              "nullable": true,
              "properties": {
                "file_id": {
                  "type": "string"
                },
                "file_unique_id": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "file_size": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "file_id",
                "file_unique_id",
                "width",
                "height"
              ]
            }
          },
          "required": [
            "file_id",
            "file_unique_id",
            "duration"
          ]
        },
        "voice": {
          "type": "object",
          "description": "Message is a voice message",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "duration": {
              "type": "integer"
            },
            "mime_type": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "file_id",
            "file_unique_id",
            "duration"
          ]
        },
        "animation": {
          "type": "object",
          "description": "Message is an animation",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "width": {
              "type": "integer"
            },
            "height": {
              "type": "integer"
            },
            "duration": {
              "type": "integer"
            },
            "thumbnail": {
              "type": "object",
              "nullable": true,
              "properties": {
                "file_id": {
                  "type": "string"
                },
                "file_unique_id": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "file_size": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "file_id",
                "file_unique_id",
                "width",
                "height"
              ]
            },
            "file_name": {
              "type": "string",
              "nullable": true
            },
            "mime_type": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "file_id",
            "file_unique_id",
            "width",
            "height",
            "duration"
          ]
        },
        "sticker": {
          "type": "object",
          "description": "Message is a sticker",
          "nullable": true,
          "properties": {
            "file_id": {
              "type": "string"
            },
            "file_unique_id": {
              "type": "string"
            },
            "width": {
              "type": "integer"
            },
            "height": {
              "type": "integer"
            },
            "is_animated": {
              "type": "boolean"
            },
            "is_video": {
              "type": "boolean"
            },
            "thumbnail": {
              "type": "object",
              "nullable": true,
              "properties": {
                "file_id": {
                  "type": "string"
                },
                "file_unique_id": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "file_size": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "file_id",
                "file_unique_id",
                "width",
                "height"
              ]
            },
            "emoji": {
              "type": "string",
              "nullable": true
            },
            "set_name": {
              "type": "string",
              "nullable": true
            },
            "file_size": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "file_id",
            "file_unique_id",
            "width",
            "height",
            "is_animated",
            "is_video"
          ]
        },
        "poll": {
          "type": "object",
          "description": "Message is a native poll",
          "nullable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "question": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "voter_count": {
                    "type": "integer"
                  }
                },
                "required": ["text", "voter_count"]
              }
            },
            "total_voter_count": {
              "type": "integer"
            },
            "is_closed": {
              "type": "boolean"
            },
            "is_anonymous": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            },
            "allows_multiple_answers": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "question",
            "options",
            "total_voter_count",
            "is_closed",
            "is_anonymous",
            "type",
            "allows_multiple_answers"
          ]
        },
        "dice": {
          "type": "object",
          "description": "Message is a dice with random value from 1 to 6",
          "nullable": true,
          "properties": {
            "emoji": {
              "type": "string"
            },
            "value": {
              "type": "integer"
            }
          },
          "required": [
            "emoji",
            "value"
          ]
        },
        "forward_from": {
          "type": "integer",
          "description": "For forwarded messages, sender of the original message",
          "nullable": true
        },
        "forward_from_chat": {
          "type": "integer",
          "description": "For messages forwarded from channels, identifier of the original channel",
          "nullable": true
        },
        "forward_from_message_id": {
          "type": "integer",
          "description": "For messages forwarded from channels, identifier of the original message in the channel",
          "nullable": true
        },
        "forward_date": {
          "type": "integer",
          "description": "For forwarded messages, date the original message was sent in Unix time",
          "nullable": true
        },
        "edit_date": {
          "type": "integer",
          "description": "Date the message was last edited in Unix time",
          "nullable": true
        },
        "is_automatic_forward": {
          "type": "boolean",
          "description": "True, if the message was automatically forwarded and hasக்கப்பட்ட link to the original message",
          "nullable": true
        },
        "has_protected_content": {
          "type": "boolean",
          "description": "True, if the message can't be forwarded",
          "nullable": true
        },
        "location": {
          "type": "object",
          "description": "Message is a shared location",
          "nullable": true,
          "properties": {
            "longitude": {
              "type": "number"
            },
            "latitude": {
              "type": "number"
            }
          },
          "required": [
            "longitude",
            "latitude"
          ]
        },
        "venue": {
          "type": "object",
          "description": "Message is a venue",
          "nullable": true,
          "properties": {
            "location": {
              "type": "object",
              "properties": {
                "longitude": {
                  "type": "number"
                },
                "latitude": {
                  "type": "number"
                }
              },
              "required": [
                "longitude",
                "latitude"
              ]
            },
            "title": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "foursquare_id": {
              "type": "string",
              "nullable": true
            },
            "foursquare_type": {
              "type": "string",
              "nullable": true
            }
          },
          "required": [
            "location",
            "title",
            "address"
          ]
        },
        "contact": {
          "type": "object",
          "description": "Message is a shared contact",
          "nullable": true,
          "properties": {
            "phone_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string",
              "nullable": true
            },
            "user_id": {
              "type": "integer",
              "nullable": true
            }
          },
          "required": [
            "phone_number",
            "first_name"
          ]
        },
        "new_chat_members": {
          "type": "array",
          "description": "New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)",
          "nullable": true,
          "items": {
            "type": "integer",
            "description": "User ID of a new member"
          }
        },
        "left_chat_member": {
          "type": "integer",
          "description": "A member was removed from the group, information about them (this member may be the bot itself)",
          "nullable": true
        },
        "new_chat_title": {
          "type": "string",
          "description": "A chat title was changed to this value",
          "nullable": true
        },
        "pinned_message": {
          "type": "object",
          "description": "Specified message was pinned",
          "nullable": true,
          "$ref": "#/$defs/message"
        },
        "video_chat_started": {
          "type": "object",
          "description": "Service message: video chat started",
          "nullable": true
        },
        "video_chat_ended": {
          "type": "object",
          "description": "Service message: video chat ended",
          "nullable": true,
          "properties": {
            "duration": {
              "type": "integer"
            }
          },
          "required": ["duration"]
        },
        "video_chat_participants_invited": {
          "type": "object",
          "description": "Service message: new participants invited to a video chat",
          "nullable": true,
          "properties": {
            "users": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "User ID of an invited user"
              }
            }
          },
          "required": ["users"]
        },
        "forum_topic_created": {
          "type": "object",
          "description": "Service message: forum topic created",
          "nullable": true,
          "properties": {
            "name": {
              "type": "string"
            },
            "icon_color": {
              "type": "integer"
            },
            "icon_custom_emoji_id": {
              "type": "string",
              "nullable": true
            }
          },
          "required": ["name", "icon_color"]
        },
        "forum_topic_closed": {
          "type": "object",
          "description": "Service message: forum topic closed",
          "nullable": true
        },
        "forum_topic_reopened": {
          "type": "object",
          "description": "Service message: forum topic reopened",
          "nullable": true
        }
      },
      "required": [
        "message_id",
        "from",
        "chat_id",
        "date"
      ]
    }
  }
}{
  "type": "object",
  "title": "WeChat",
  "description": "JSON Schema representation of WeChat's core features and data structures.",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of WeChat users.",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "groups": {
      "type": "array",
      "description": "List of WeChat groups.",
      "items": {
        "$ref": "#/definitions/Group"
      }
    },
    "moments": {
      "type": "array",
      "description": "List of WeChat Moments posts.",
      "items": {
        "$ref": "#/definitions/Moment"
      }
    },
    "officialAccounts": {
      "type": "array",
      "description": "List of Official Accounts.",
      "items": {
        "$ref": "#/definitions/OfficialAccount"
      }
    },
    "miniPrograms": {
      "type": "array",
      "description": "List of Mini Programs.",
      "items": {
        "$ref": "#/definitions/MiniProgram"
      }
    },
    "payments": {
      "type": "array",
      "description": "List of WeChat Pay transactions.",
      "items": {
        "$ref": "#/definitions/PaymentTransaction"
      }
    },
    "messages": {
      "type": "array",
      "description": "General container for all messages across conversations.",
      "items": {
        "$ref": "#/definitions/Message"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "description": "A WeChat user.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "weChatId": {
          "type": "string",
          "description": "User's WeChat ID (can be changed once)."
        },
        "phoneNumber": {
          "type": "string",
          "description": "User's phone number (used for registration).",
          "format": "phone"
        },
        "nickname": {
          "type": "string",
          "description": "User's display name."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL to the user's profile picture.",
          "format": "URL"
        },
        "gender": {
          "type": "string",
          "enum": [
            "male",
            "female",
            "unknown"
          ]
        },
        "country": {
          "type": "string",
          "description": "User's country code."
        },
        "province": {
          "type": "string",
          "description": "User's province."
        },
        "city": {
          "type": "string",
          "description": "User's city."
        },
        "language": {
          "type": "string",
          "description": "User's preferred language."
        },
        "friends": {
          "type": "array",
          "description": "List of user IDs of the user's friends.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "blockedUsers": {
          "type": "array",
          "description": "List of user IDs that this user has blocked.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "subscribedOfficialAccounts": {
          "type": "array",
          "description": "List of Official Account IDs subscribed to by the user",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "required": [
        "userId",
        "phoneNumber",
        "nickname"
      ]
    },
    "Group": {
      "type": "object",
      "description": "A WeChat group chat.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Unique identifier for the group.",
          "format": "uuid"
        },
        "groupName": {
          "type": "string",
          "description": "Name of the group."
        },
        "ownerId": {
          "type": "string",
          "description": "User ID of the group owner.",
          "format": "uuid"
        },
        "members": {
          "type": "array",
          "description": "List of user IDs of group members.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp of when the group was created.",
          "format": "date-time"
        },
        "announcement": {
          "type": "string",
          "description": "Current group announcement."
        }
      },
      "required": [
        "groupId",
        "groupName",
        "ownerId",
        "members"
      ]
    },
    "Moment": {
      "type": "object",
      "description": "A post on WeChat Moments.",
      "properties": {
        "momentId": {
          "type": "string",
          "description": "Unique identifier for the moment.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "User ID of the moment's author.",
          "format": "uuid"
        },
        "content": {
          "type": "string",
          "description": "Text content of the moment."
        },
        "media": {
          "type": "array",
          "description": "List of media attached to the moment.",
          "items": {
            "$ref": "#/definitions/Media"
          }
        },
        "location": {
          "type": "object",
          "description": "Location information of the moment.",
          "properties": {
            "latitude": {
              "type": "number",
              "format": "float"
            },
            "longitude": {
              "type": "number",
              "format": "float"
            },
            "name": {
              "type": "string",
              "description": "Name of location"
            }
          }
        },
        "visibility": {
          "type": "string",
          "description": "Visibility setting of the moment",
          "enum": [
            "public",
            "private",
            "specificContacts",
            "excludeContacts"
          ]
        },
        "specificContacts": {
          "type": "array",
          "description": "If visibility is set to specificContacts, this lists the allowed userIds",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "excludeContacts": {
          "type": "array",
          "description": "If visibility is set to excludeContacts, this lists the disallowed userIds",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "likes": {
          "type": "array",
          "description": "List of user IDs who liked the moment.",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "comments": {
          "type": "array",
          "description": "List of comments on the moment.",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the moment was posted.",
          "format": "date-time"
        }
      },
      "required": [
        "momentId",
        "userId",
        "timestamp"
      ]
    },
    "Comment": {
      "type": "object",
      "description": "A comment on a Moment.",
      "properties": {
        "commentId": {
          "type": "string",
          "description": "Unique identifier for the comment.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "User ID of the commenter.",
          "format": "uuid"
        },
        "content": {
          "type": "string",
          "description": "Text content of the comment."
        },
        "replyToCommentId": {
          "type": "string",
          "description": "If replying to another comment, the ID of that comment, otherwise null.",
          "format": "uuid"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the comment was posted.",
          "format": "date-time"
        }
      },
      "required": [
        "commentId",
        "userId",
        "content",
        "timestamp"
      ]
    },
    "Media": {
      "type": "object",
      "description": "Media attached to a moment or message.",
      "properties": {
        "mediaId": {
          "type": "string",
          "description": "Unique identifier of the media file on the server.",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "image",
            "video",
            "audio"
          ]
        },
        "url": {
          "type": "string",
          "description": "URL to the media file.",
          "format": "URL"
        },
        "thumbnailUrl": {
          "type": "string",
          "description": "URL to a thumbnail for image and video types",
          "format": "URL"
        },
        "duration": {
          "type": "integer",
          "description": "Duration of audio or video in seconds"
        }
      },
      "required": [
        "mediaId",
        "type",
        "url"
      ]
    },
    "OfficialAccount": {
      "type": "object",
      "description": "An official account on WeChat.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Unique identifier for the official account.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Name of the official account."
        },
        "description": {
          "type": "string",
          "description": "Description of the official account."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL to the official account's profile picture.",
          "format": "URL"
        },
        "ownerId": {
          "type": "string",
          "description": "UserId of the owner or admin of the Official Account",
          "format": "uuid"
        },
        "followersCount": {
          "type": "integer",
          "description": "Number of followers."
        },
        "articles": {
          "type": "array",
          "description": "List of articles published by the official account.",
          "items": {
            "$ref": "#/definitions/Article"
          }
        },
        "menu": {
          "type": "array",
          "description": "Custom menu configuration for the Official Account",
          "items": {
            "$ref": "#/definitions/OfficialAccountMenuEntry"
          }
        }
      },
      "required": [
        "accountId",
        "name"
      ]
    },
    "OfficialAccountMenuEntry": {
      "type": "object",
      "description": "Entry in an Official Account menu",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "click",
            "view",
            "miniprogram"
          ],
          "description": "Type of action this menu entry performs"
        },
        "name": {
          "type": "string",
          "description": "Name displayed on the menu button"
        },
        "key": {
          "type": "string",
          "description": "Key to identify this action, for 'click' type"
        },
        "url": {
          "type": "string",
          "format": "URL",
          "description": "URL to open, for 'view' type"
        },
        "appid": {
          "type": "string",
          "description": "AppId of mini program to open, for 'miniprogram' type"
        },
        "pagepath": {
          "type": "string",
          "description": "Path within the mini program to open"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "Article": {
      "type": "object",
      "description": "An article published by an official account.",
      "properties": {
        "articleId": {
          "type": "string",
          "description": "Unique identifier for the article."
        },
        "title": {
          "type": "string",
          "description": "Title of the article."
        },
        "content": {
          "type": "string",
          "description": "Content of the article (can be HTML)."
        },
        "author": {
          "type": "string",
          "description": "Author of the article."
        },
        "publishDate": {
          "type": "string",
          "description": "Date the article was published.",
          "format": "date-time"
        },
        "coverImageUrl": {
          "type": "string",
          "format": "URL",
          "description": "URL to the cover image of the article"
        },
        "readCount": {
          "type": "integer",
          "description": "Number of times the article has been read."
        },
        "likeCount": {
          "type": "integer",
          "description": "Number of likes the article has received."
        }
      },
      "required": [
        "articleId",
        "title",
        "content",
        "publishDate"
      ]
    },
    "MiniProgram": {
      "type": "object",
      "description": "A WeChat Mini Program.",
      "properties": {
        "appId": {
          "type": "string",
          "description": "Unique identifier (AppID) of the Mini Program."
        },
        "name": {
          "type": "string",
          "description": "Name of the Mini Program."
        },
        "description": {
          "type": "string",
          "description": "Description of the Mini Program."
        },
        "iconUrl": {
          "type": "string",
          "description": "URL to the Mini Program's icon.",
          "format": "URL"
        },
        "developerId": {
          "type": "string",
          "description": "User ID of the Mini Program developer."
        },
        "version": {
          "type": "string",
          "description": "Version of the Mini Program."
        },
        "categories": {
          "type": "array",
          "description": "Categories that the Mini Program belongs to.",
          "items": {
            "type": "string"
          }
        },
        "pages": {
          "type": "array",
          "description": "List of paths to pages within the Mini Program",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "appId",
        "name"
      ]
    },
    "PaymentTransaction": {
      "type": "object",
      "description": "A WeChat Pay transaction.",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Unique identifier for the transaction.",
          "format": "uuid"
        },
        "payerUserId": {
          "type": "string",
          "description": "User ID of the payer.",
          "format": "uuid"
        },
        "payeeUserId": {
          "type": "string",
          "description": "User ID of the payee (can be a user or merchant).",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "description": "Transaction amount (in the smallest currency unit, e.g., cents for CNY).",
          "format": "float"
        },
        "currency": {
          "type": "string",
          "description": "Currency code (e.g., CNY).",
          "default": "CNY"
        },
        "description": {
          "type": "string",
          "description": "Description of the transaction."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "successful",
            "failed",
            "refunded"
          ]
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of the transaction.",
          "format": "date-time"
        }
      },
      "required": [
        "transactionId",
        "payerUserId",
        "payeeUserId",
        "amount",
        "timestamp"
      ]
    },
    "Message": {
      "type": "object",
      "description": "A message sent in a private or group chat.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "Unique identifier for the message.",
          "format": "uuid"
        },
        "senderId": {
          "type": "string",
          "description": "User ID of the sender.",
          "format": "uuid"
        },
        "receiverId": {
          "type": "string",
          "description": "User ID of the receiver (for private chat) or Group ID (for group chat).",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "text",
            "image",
            "voice",
            "video",
            "file",
            "location",
            "sticker",
            "system",
            "red_packet"
          ]
        },
        "content": {
          "type": "string",
          "description": "Text content of the message (if applicable)."
        },
        "media": {
          "$ref": "#/definitions/Media",
          "description": "Media content of the message (if applicable)."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the message was sent.",
          "format": "date-time"
        },
        "isRead": {
          "type": "boolean",
          "description": "Indicates if the message has been read by the receiver. For group messages, this can be more complex to track individually"
        }
      },
      "required": [
        "messageId",
        "senderId",
        "receiverId",
        "type",
        "timestamp"
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "WhatsApp",
  "description": "JSON Schema for a simplified WhatsApp data model",
  "type": "object",
  "properties": {
    "users": {
      "type": "array",
      "description": "List of WhatsApp users",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "groups": {
      "type": "array",
      "description": "List of WhatsApp groups",
      "items": {
        "$ref": "#/definitions/Group"
      }
    },
    "messages": {
      "type": "array",
      "description": "List of all messages sent",
      "items": {
        "$ref": "#/definitions/Message"
      }
    },
    "calls": {
      "type": "array",
      "description": "List of all calls made",
      "items": {
        "$ref": "#/definitions/Call"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the user"
        },
        "phoneNumber": {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{1,14}$",
          "description": "User's phone number in E.164 format"
        },
        "name": {
          "type": "string",
          "description": "User's display name"
        },
        "status": {
          "type": "string",
          "description": "User's current status message"
        },
        "profilePicture": {
          "type": "string",
          "format": "URL",
          "description": "URL to the user's profile picture"
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the user was last seen online"
        },
        "about": {
          "type": "string",
          "description": "User's about information"
        },
        "isBlocked": {
          "type": "boolean",
          "description": "Indicates if user is blocked globally"
        },
        "blockedUsers": {
          "type": "array",
          "description": "List of blocked userIds",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "required": [
        "id",
        "phoneNumber"
      ]
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the group"
        },
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "description": {
          "type": "string",
          "description": "Group description"
        },
        "groupPicture": {
          "type": "string",
          "format": "URL",
          "description": "URL to the group's picture"
        },
        "members": {
          "type": "array",
          "description": "List of user IDs who are members of the group",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "admins": {
          "type": "array",
          "description": "List of user IDs who are admins of the group",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the group was created"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid",
          "description": "User ID of the group creator"
        }
      },
      "required": [
        "id",
        "name",
        "members",
        "createdAt",
        "createdBy"
      ]
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the message"
        },
        "senderId": {
          "type": "string",
          "format": "uuid",
          "description": "User ID of the sender"
        },
        "recipientId": {
          "type": "string",
          "format": "uuid",
          "description": "User ID of the recipient (for 1:1 chats)"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "description": "Group ID (for group chats)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the message was sent"
        },
        "content": {
          "type": "object",
          "description": "Content of the message",
          "oneOf": [
            {
              "$ref": "#/definitions/TextMessageContent"
            },
            {
              "$ref": "#/definitions/MediaMessageContent"
            },
            {
              "$ref": "#/definitions/LocationMessageContent"
            },
            {
              "$ref": "#/definitions/ContactMessageContent"
            }
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "sent",
            "delivered",
            "read",
            "failed"
          ],
          "description": "Message status"
        },
        "replyToMessageId": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the message this message is replying to (optional)"
        }
      },
      "required": [
        "id",
        "senderId",
        "timestamp",
        "content",
        "status"
      ],
      "oneOf": [
        {
          "required": ["recipientId"]
        },
        {
          "required": ["groupId"]
        }
      ]
    },
    "TextMessageContent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["text"],
          "description": "Indicates that this is a text message"
        },
        "text": {
          "type": "string",
          "description": "The text content of the message"
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "MediaMessageContent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "image",
            "video",
            "audio",
            "document"
          ],
          "description": "Type of media"
        },
        "url": {
          "type": "string",
          "format": "URL",
          "description": "URL to the media file"
        },
        "caption": {
          "type": "string",
          "description": "Caption for the media (optional)"
        },
        "mimeType": {
          "type": "string",
          "description": "MIME type of the media"
        },
        "fileSize": {
          "type": "integer",
          "description": "File size in bytes"
        },
        "fileName": {
          "type": "string",
          "description": "Name of the file"
        },
        "duration": {
          "type": "integer",
          "description": "Duration of audio or video in seconds (optional)"
        },
        "width": {
          "type": "integer",
          "description": "Width of the image or video (optional)"
        },
        "height": {
          "type": "integer",
          "description": "Height of the image or video (optional)"
        }
      },
      "required": [
        "type",
        "url",
        "mimeType"
      ]
    },
    "LocationMessageContent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["location"],
          "description": "Indicates that this is a location message"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the location"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the location"
        },
        "name": {
          "type": "string",
          "description": "Name of the location (optional)"
        },
        "address": {
          "type": "string",
          "description": "Address of the location (optional)"
        }
      },
      "required": [
        "type",
        "latitude",
        "longitude"
      ]
    },
    "ContactMessageContent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["contact"],
          "description": "Indicates that this is a contact message"
        },
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the contact"
              },
              "phones": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties":{
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of phone number i.e. work, home etc."
                    }
                  },
                  "required": [
                    "phone"
                  ]
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "required": [
        "type",
        "contacts"
      ]
    },
    "Call": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the call"
        },
        "callerId": {
          "type": "string",
          "format": "uuid",
          "description": "User ID of the caller"
        },
        "receiverId": {
          "type": "string",
          "format": "uuid",
          "description": "User ID of the receiver"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "description": "Group ID (for group calls)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the call started"
        },
        "duration": {
          "type": "integer",
          "description": "Duration of the call in seconds"
        },
        "type": {
          "type": "string",
          "enum": [
            "audio",
            "video"
          ],
          "description": "Type of call"
        },
        "status": {
          "type": "string",
          "enum": [
            "missed",
            "answered",
            "rejected",
            "ongoing"
          ],
          "description": "Status of the call"
        }
      },
      "required": [
        "id",
        "callerId",
        "timestamp",
        "type",
        "status"
      ],
      "oneOf": [
        {
          "required": ["receiverId"]
        },
        {
          "required": ["groupId"]
        }
      ]
    }
  }
}{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Zoom App",
  "description": "JSON Schema for a Zoom App",
  "type": "object",
  "properties": {
    "app_name": {
      "type": "string",
      "description": "Name of the Zoom App",
      "minLength": 3,
      "maxLength": 64
    },
    "version": {
      "type": "string",
      "description": "Version of the Zoom App",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "description": {
      "type": "string",
      "description": "Brief description of the Zoom App",
      "maxLength": 512
    },
    "scopes": {
      "type": "array",
      "description": "OAuth scopes required by the app",
      "items": {
        "type": "string",
        "enum": [
          "user:read",
          "user:write",
          "meeting:read",
          "meeting:write",
          "recording:read",
          "recording:write",
          "webinar:read",
          "webinar:write",
          "report:read",
          "account:read",
          "account:write",
          "dashboard_meetings:read",
          "dashboard_webinars:read",
          "chat:write:admin",
          "chat:read",
          "chat:write",
          "chat_contact:read",
          "chat_contact:write",
          "chat_channel:read",
          "chat_channel:write",
          "phone:read",
          "phone:write",
          "contact_center:read",
          "contact_center:write",
          "im:bot",
          "im:chat",
          "room:read",
          "room:write"
        ]
      },
      "uniqueItems": true
    },
    "event_subscriptions": {
      "type": "object",
      "description": "Event subscriptions for webhooks",
      "properties": {
        "endpoint_url": {
          "type": "string",
          "description": "URL to receive event notifications",
          "format": "url"
        },
        "events": {
          "type": "array",
          "description": "List of events to subscribe to",
          "items": {
            "type": "string",
            "enum": [
              "meeting.started",
              "meeting.ended",
              "meeting.participant_joined",
              "meeting.participant_left",
              "meeting.sharing_started",
              "meeting.sharing_ended",
              "meeting.recording_started",
              "meeting.recording_completed",
              "meeting.created",
              "meeting.deleted",
              "meeting.updated",
              "meeting.registration_created",
              "meeting.registration_approved",
              "meeting.registration_denied",
              "meeting.registration_cancelled",
              "webinar.started",
              "webinar.ended",
              "webinar.participant_joined",
              "webinar.participant_left",
              "webinar.sharing_started",
              "webinar.sharing_ended",
              "webinar.created",
              "webinar.deleted",
              "webinar.updated",
              "webinar.registration_created",
              "webinar.registration_approved",
              "webinar.registration_denied",
              "webinar.registration_cancelled",
              "user.created",
              "user.updated",
              "user.deleted",
              "user.activated",
              "user.deactivated",
              "user.presence_status_updated",
              "user.settings_updated",
              "recording.started",
              "recording.completed",
              "recording.deleted",
              "recording.trashed",
              "recording.recovered",
              "recording.transcript_completed",
              "chat_message.sent",
              "chat_message.updated",
              "chat_message.deleted",
              "chat_channel.created",
              "chat_channel.updated",
              "chat_channel.deleted",
              "chat_channel.member_added",
              "chat_channel.member_removed",
              "phone.caller_connected",
              "phone.caller_disconnected",
              "phone.call_recording_completed",
              "contact_center.engagement_started",
              "contact_center.engagement_ended",
              "contact_center.engagement_transferred",
              "contact_center.engagement_recording_started",
              "contact_center.engagement_recording_completed"
            ]
          },
          "uniqueItems": true
        }
      },
      "required": [
        "endpoint_url",
        "events"
      ]
    },
    "redirect_urls": {
      "type": "array",
      "description": "Allowed redirect URLs for OAuth flow",
      "items": {
        "type": "string",
        "format": "url"
      },
      "uniqueItems": true
    },
    "home_url": {
      "type": "string",
      "description": "Home URL of the Zoom App",
      "format": "url"
    },
    "privacy_policy_url": {
      "type": "string",
      "description": "Privacy policy URL of the Zoom App",
      "format": "url"
    },
    "terms_of_use_url": {
      "type": "string",
      "description": "Terms of Use URL of the Zoom App",
      "format": "url"
    },
    "support_url": {
      "type": "string",
      "description": "Support URL for the Zoom App",
      "format": "url"
    },
    "installation_url": {
      "type": "string",
      "description": "URL for installing the Zoom App",
      "format": "url"
    },
    "deauthorization_notification": {
      "type": "object",
      "description": "Deauthorization notification settings",
      "properties": {
        "endpoint_url": {
          "type": "string",
          "description": "URL to receive deauthorization notifications",
          "format": "url"
        }
      },
      "required": [
        "endpoint_url"
      ]
    },
    "app_credentials": {
      "type": "object",
      "description": "App Credentials, these are sensitive and should not be returned in all responses",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "OAuth Client ID"
        },
        "client_secret": {
          "type": "string",
          "description": "OAuth Client Secret"
        },
        "verification_token": {
          "type": "string",
          "description": "Verification token for event subscriptions"
        }
      },
      "required": [
        "client_id",
        "client_secret"
      ]
    },
    "features": {
      "type": "object",
      "description": "Features the Zoom App utilizes",
      "properties": {
        "in_meeting": {
          "type": "boolean",
          "description": "Whether the app can be used within a meeting"
        },
        "standalone": {
          "type": "boolean",
          "description": "Whether the app can be used outside of a meeting"
        },
        "chat_bot": {
          "type": "boolean",
          "description": "Whether the app is a Chatbot"
        },
        "zoom_app_sdk":{
          "type": "boolean",
          "description": "Whether the app uses the Zoom Apps SDK"
        },
        "rest_api":{
          "type": "boolean",
          "description": "Whether the app uses the Zoom REST API"
        },
        "webhooks":{
          "type": "boolean",
          "description": "Whether the app uses webhooks"
        }
      }
    }
  },
  "required": [
    "app_name",
    "version",
    "description",
    "scopes"
  ]
}